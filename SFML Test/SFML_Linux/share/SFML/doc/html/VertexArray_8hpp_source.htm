<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<html>
    <head>
        <title>SFML - Simple and Fast Multimedia Library</title>
        <meta http-equiv="Content-Type" content="text/html;charset=UTF-8" />
        <link href="doxygen.css" rel="stylesheet" type="text/css" />
        <link href="tabs.css" rel="stylesheet" type="text/css" />
    </head>
    <body>
        <div id="logo">
            <img src="./logo.jpg" width="770" height="200" title="SFML home" alt="SFML logo" />
        </div>
<!-- Generated by Doxygen 1.7.6.1 -->
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.htm"><span>Main&#160;Page</span></a></li>
      <li><a href="modules.htm"><span>Modules</span></a></li>
      <li><a href="annotated.htm"><span>Classes</span></a></li>
      <li class="current"><a href="files.htm"><span>Files</span></a></li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="files.htm"><span>File&#160;List</span></a></li>
    </ul>
  </div>
</div>
<div class="header">
  <div class="headertitle">
<div class="title">VertexArray.hpp</div>  </div>
</div><!--header-->
<div class="contents">
<div class="fragment"><pre class="fragment"><a name="l00001"></a>00001 
<a name="l00002"></a>00002 <span class="comment">//</span>
<a name="l00003"></a>00003 <span class="comment">// SFML - Simple and Fast Multimedia Library</span>
<a name="l00004"></a>00004 <span class="comment">// Copyright (C) 2007-2012 Laurent Gomila (laurent.gom@gmail.com)</span>
<a name="l00005"></a>00005 <span class="comment">//</span>
<a name="l00006"></a>00006 <span class="comment">// This software is provided &#39;as-is&#39;, without any express or implied warranty.</span>
<a name="l00007"></a>00007 <span class="comment">// In no event will the authors be held liable for any damages arising from the use of this software.</span>
<a name="l00008"></a>00008 <span class="comment">//</span>
<a name="l00009"></a>00009 <span class="comment">// Permission is granted to anyone to use this software for any purpose,</span>
<a name="l00010"></a>00010 <span class="comment">// including commercial applications, and to alter it and redistribute it freely,</span>
<a name="l00011"></a>00011 <span class="comment">// subject to the following restrictions:</span>
<a name="l00012"></a>00012 <span class="comment">//</span>
<a name="l00013"></a>00013 <span class="comment">// 1. The origin of this software must not be misrepresented;</span>
<a name="l00014"></a>00014 <span class="comment">//    you must not claim that you wrote the original software.</span>
<a name="l00015"></a>00015 <span class="comment">//    If you use this software in a product, an acknowledgment</span>
<a name="l00016"></a>00016 <span class="comment">//    in the product documentation would be appreciated but is not required.</span>
<a name="l00017"></a>00017 <span class="comment">//</span>
<a name="l00018"></a>00018 <span class="comment">// 2. Altered source versions must be plainly marked as such,</span>
<a name="l00019"></a>00019 <span class="comment">//    and must not be misrepresented as being the original software.</span>
<a name="l00020"></a>00020 <span class="comment">//</span>
<a name="l00021"></a>00021 <span class="comment">// 3. This notice may not be removed or altered from any source distribution.</span>
<a name="l00022"></a>00022 <span class="comment">//</span>
<a name="l00024"></a>00024 <span class="comment"></span>
<a name="l00025"></a>00025 <span class="preprocessor">#ifndef SFML_VERTEXARRAY_HPP</span>
<a name="l00026"></a>00026 <span class="preprocessor"></span><span class="preprocessor">#define SFML_VERTEXARRAY_HPP</span>
<a name="l00027"></a>00027 <span class="preprocessor"></span>
<a name="l00029"></a>00029 <span class="comment">// Headers</span>
<a name="l00031"></a>00031 <span class="comment"></span><span class="preprocessor">#include &lt;SFML/Graphics/Export.hpp&gt;</span>
<a name="l00032"></a>00032 <span class="preprocessor">#include &lt;SFML/Graphics/Vertex.hpp&gt;</span>
<a name="l00033"></a>00033 <span class="preprocessor">#include &lt;SFML/Graphics/PrimitiveType.hpp&gt;</span>
<a name="l00034"></a>00034 <span class="preprocessor">#include &lt;SFML/Graphics/Rect.hpp&gt;</span>
<a name="l00035"></a>00035 <span class="preprocessor">#include &lt;SFML/Graphics/Drawable.hpp&gt;</span>
<a name="l00036"></a>00036 <span class="preprocessor">#include &lt;vector&gt;</span>
<a name="l00037"></a>00037 
<a name="l00038"></a>00038 
<a name="l00039"></a>00039 <span class="keyword">namespace </span>sf
<a name="l00040"></a>00040 {
<a name="l00045"></a><a class="code" href="classsf_1_1VertexArray.htm">00045</a> <span class="keyword">class </span>SFML_GRAPHICS_API <a class="code" href="classsf_1_1VertexArray.htm" title="Define a set of one or more 2D primitives.">VertexArray</a> : <span class="keyword">public</span> <a class="code" href="classsf_1_1Drawable.htm" title="Abstract base class for objects that can be drawn to a render target.">Drawable</a>
<a name="l00046"></a>00046 {
<a name="l00047"></a>00047 <span class="keyword">public</span> :
<a name="l00048"></a>00048 
<a name="l00055"></a>00055     <a class="code" href="classsf_1_1VertexArray.htm" title="Define a set of one or more 2D primitives.">VertexArray</a>();
<a name="l00056"></a>00056 
<a name="l00064"></a>00064     <span class="keyword">explicit</span> <a class="code" href="classsf_1_1VertexArray.htm" title="Define a set of one or more 2D primitives.">VertexArray</a>(<a class="code" href="group__graphics.htm#ga5ee56ac1339984909610713096283b1b" title="Types of primitives that a sf::VertexArray can render.">PrimitiveType</a> type, <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> vertexCount = 0);
<a name="l00065"></a>00065 
<a name="l00072"></a>00072     <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> getVertexCount() <span class="keyword">const</span>;
<a name="l00073"></a>00073 
<a name="l00088"></a>00088     <a class="code" href="classsf_1_1Vertex.htm" title="Define a point with color and texture coordinates.">Vertex</a>&amp; operator [](<span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> index);
<a name="l00089"></a>00089 
<a name="l00104"></a>00104     <span class="keyword">const</span> <a class="code" href="classsf_1_1Vertex.htm" title="Define a point with color and texture coordinates.">Vertex</a>&amp; operator [](<span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> index) <span class="keyword">const</span>;
<a name="l00105"></a>00105 
<a name="l00115"></a>00115     <span class="keywordtype">void</span> clear();
<a name="l00116"></a>00116 
<a name="l00129"></a>00129     <span class="keywordtype">void</span> resize(<span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> vertexCount);
<a name="l00130"></a>00130 
<a name="l00137"></a>00137     <span class="keywordtype">void</span> append(<span class="keyword">const</span> <a class="code" href="classsf_1_1Vertex.htm" title="Define a point with color and texture coordinates.">Vertex</a>&amp; vertex);
<a name="l00138"></a>00138 
<a name="l00153"></a>00153     <span class="keywordtype">void</span> setPrimitiveType(<a class="code" href="group__graphics.htm#ga5ee56ac1339984909610713096283b1b" title="Types of primitives that a sf::VertexArray can render.">PrimitiveType</a> type);
<a name="l00154"></a>00154 
<a name="l00161"></a>00161     <a class="code" href="group__graphics.htm#ga5ee56ac1339984909610713096283b1b" title="Types of primitives that a sf::VertexArray can render.">PrimitiveType</a> getPrimitiveType() <span class="keyword">const</span>;
<a name="l00162"></a>00162 
<a name="l00172"></a>00172     <a class="code" href="classsf_1_1Rect.htm">FloatRect</a> getBounds() <span class="keyword">const</span>;
<a name="l00173"></a>00173 
<a name="l00174"></a>00174 <span class="keyword">private</span> :
<a name="l00175"></a>00175 
<a name="l00183"></a>00183     <span class="keyword">virtual</span> <span class="keywordtype">void</span> draw(<a class="code" href="classsf_1_1RenderTarget.htm" title="Base class for all render targets (window, texture, ...)">RenderTarget</a>&amp; target, <a class="code" href="classsf_1_1RenderStates.htm" title="Define the states used for drawing to a RenderTarget.">RenderStates</a> states) <span class="keyword">const</span>;
<a name="l00184"></a>00184 
<a name="l00185"></a>00185 <span class="keyword">private</span>:
<a name="l00186"></a>00186 
<a name="l00188"></a>00188     <span class="comment">// Member data</span>
<a name="l00190"></a>00190 <span class="comment"></span>    std::vector&lt;Vertex&gt; m_vertices;      
<a name="l00191"></a>00191     <a class="code" href="group__graphics.htm#ga5ee56ac1339984909610713096283b1b" title="Types of primitives that a sf::VertexArray can render.">PrimitiveType</a>       m_primitiveType; 
<a name="l00192"></a>00192 };
<a name="l00193"></a>00193 
<a name="l00194"></a>00194 } <span class="comment">// namespace sf</span>
<a name="l00195"></a>00195 
<a name="l00196"></a>00196 
<a name="l00197"></a>00197 <span class="preprocessor">#endif // SFML_VERTEXARRAY_HPP</span>
<a name="l00198"></a>00198 <span class="preprocessor"></span>
<a name="l00199"></a>00199 
</pre></div></div><!-- contents -->

        <p id="footer">
            &nbsp;::&nbsp; Copyright &copy; 2007-2008 Laurent Gomila, all rights reserved &nbsp;::&nbsp;
            Documentation generated by <a href="http://www.doxygen.org/" title="doxygen website">doxygen 1.5.2</a> &nbsp;::&nbsp;
        </p>

    </body>
</html>
