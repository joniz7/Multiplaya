<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<html>
    <head>
        <title>SFML - Simple and Fast Multimedia Library</title>
        <meta http-equiv="Content-Type" content="text/html;charset=UTF-8" />
        <link href="doxygen.css" rel="stylesheet" type="text/css" />
        <link href="tabs.css" rel="stylesheet" type="text/css" />
    </head>
    <body>
        <div id="logo">
            <img src="./logo.jpg" width="770" height="200" title="SFML home" alt="SFML logo" />
        </div>
<!-- Generated by Doxygen 1.7.6.1 -->
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.htm"><span>Main&#160;Page</span></a></li>
      <li><a href="modules.htm"><span>Modules</span></a></li>
      <li><a href="annotated.htm"><span>Classes</span></a></li>
      <li class="current"><a href="files.htm"><span>Files</span></a></li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="files.htm"><span>File&#160;List</span></a></li>
    </ul>
  </div>
</div>
<div class="header">
  <div class="headertitle">
<div class="title">TcpSocket.hpp</div>  </div>
</div><!--header-->
<div class="contents">
<div class="fragment"><pre class="fragment"><a name="l00001"></a>00001 
<a name="l00002"></a>00002 <span class="comment">//</span>
<a name="l00003"></a>00003 <span class="comment">// SFML - Simple and Fast Multimedia Library</span>
<a name="l00004"></a>00004 <span class="comment">// Copyright (C) 2007-2012 Laurent Gomila (laurent.gom@gmail.com)</span>
<a name="l00005"></a>00005 <span class="comment">//</span>
<a name="l00006"></a>00006 <span class="comment">// This software is provided &#39;as-is&#39;, without any express or implied warranty.</span>
<a name="l00007"></a>00007 <span class="comment">// In no event will the authors be held liable for any damages arising from the use of this software.</span>
<a name="l00008"></a>00008 <span class="comment">//</span>
<a name="l00009"></a>00009 <span class="comment">// Permission is granted to anyone to use this software for any purpose,</span>
<a name="l00010"></a>00010 <span class="comment">// including commercial applications, and to alter it and redistribute it freely,</span>
<a name="l00011"></a>00011 <span class="comment">// subject to the following restrictions:</span>
<a name="l00012"></a>00012 <span class="comment">//</span>
<a name="l00013"></a>00013 <span class="comment">// 1. The origin of this software must not be misrepresented;</span>
<a name="l00014"></a>00014 <span class="comment">//    you must not claim that you wrote the original software.</span>
<a name="l00015"></a>00015 <span class="comment">//    If you use this software in a product, an acknowledgment</span>
<a name="l00016"></a>00016 <span class="comment">//    in the product documentation would be appreciated but is not required.</span>
<a name="l00017"></a>00017 <span class="comment">//</span>
<a name="l00018"></a>00018 <span class="comment">// 2. Altered source versions must be plainly marked as such,</span>
<a name="l00019"></a>00019 <span class="comment">//    and must not be misrepresented as being the original software.</span>
<a name="l00020"></a>00020 <span class="comment">//</span>
<a name="l00021"></a>00021 <span class="comment">// 3. This notice may not be removed or altered from any source distribution.</span>
<a name="l00022"></a>00022 <span class="comment">//</span>
<a name="l00024"></a>00024 <span class="comment"></span>
<a name="l00025"></a>00025 <span class="preprocessor">#ifndef SFML_TCPSOCKET_HPP</span>
<a name="l00026"></a>00026 <span class="preprocessor"></span><span class="preprocessor">#define SFML_TCPSOCKET_HPP</span>
<a name="l00027"></a>00027 <span class="preprocessor"></span>
<a name="l00029"></a>00029 <span class="comment">// Headers</span>
<a name="l00031"></a>00031 <span class="comment"></span><span class="preprocessor">#include &lt;SFML/Network/Export.hpp&gt;</span>
<a name="l00032"></a>00032 <span class="preprocessor">#include &lt;SFML/Network/Socket.hpp&gt;</span>
<a name="l00033"></a>00033 <span class="preprocessor">#include &lt;SFML/System/Time.hpp&gt;</span>
<a name="l00034"></a>00034 
<a name="l00035"></a>00035 
<a name="l00036"></a>00036 <span class="keyword">namespace </span>sf
<a name="l00037"></a>00037 {
<a name="l00038"></a>00038 <span class="keyword">class </span>TcpListener;
<a name="l00039"></a>00039 <span class="keyword">class </span>IpAddress;
<a name="l00040"></a>00040 <span class="keyword">class </span>Packet;
<a name="l00041"></a>00041 
<a name="l00046"></a><a class="code" href="classsf_1_1TcpSocket.htm">00046</a> <span class="keyword">class </span>SFML_NETWORK_API <a class="code" href="classsf_1_1TcpSocket.htm" title="Specialized socket using the TCP protocol.">TcpSocket</a> : <span class="keyword">public</span> <a class="code" href="classsf_1_1Socket.htm" title="Base class for all the socket types.">Socket</a>
<a name="l00047"></a>00047 {
<a name="l00048"></a>00048 <span class="keyword">public</span> :
<a name="l00049"></a>00049 
<a name="l00054"></a>00054     <a class="code" href="classsf_1_1TcpSocket.htm" title="Specialized socket using the TCP protocol.">TcpSocket</a>();
<a name="l00055"></a>00055 
<a name="l00066"></a>00066     <span class="keywordtype">unsigned</span> <span class="keywordtype">short</span> getLocalPort() <span class="keyword">const</span>;
<a name="l00067"></a>00067 
<a name="l00079"></a>00079     <a class="code" href="classsf_1_1IpAddress.htm" title="Encapsulate an IPv4 network address.">IpAddress</a> getRemoteAddress() <span class="keyword">const</span>;
<a name="l00080"></a>00080 
<a name="l00092"></a>00092     <span class="keywordtype">unsigned</span> <span class="keywordtype">short</span> getRemotePort() <span class="keyword">const</span>;
<a name="l00093"></a>00093 
<a name="l00111"></a>00111     <a class="code" href="classsf_1_1Socket.htm#a51bf0fd51057b98a10fbb866246176dc" title="Status codes that may be returned by socket functions.">Status</a> connect(<span class="keyword">const</span> <a class="code" href="classsf_1_1IpAddress.htm" title="Encapsulate an IPv4 network address.">IpAddress</a>&amp; remoteAddress, <span class="keywordtype">unsigned</span> <span class="keywordtype">short</span> remotePort, <a class="code" href="classsf_1_1Time.htm" title="Represents a time value.">Time</a> timeout = <a class="code" href="classsf_1_1Time.htm#a8db127b632fa8da21550e7282af11fa0" title="Predefined &quot;zero&quot; time value.">Time::Zero</a>);
<a name="l00112"></a>00112 
<a name="l00122"></a>00122     <span class="keywordtype">void</span> disconnect();
<a name="l00123"></a>00123 
<a name="l00137"></a>00137     <a class="code" href="classsf_1_1Socket.htm#a51bf0fd51057b98a10fbb866246176dc" title="Status codes that may be returned by socket functions.">Status</a> send(<span class="keyword">const</span> <span class="keywordtype">void</span>* data, std::size_t size);
<a name="l00138"></a>00138 
<a name="l00155"></a>00155     <a class="code" href="classsf_1_1Socket.htm#a51bf0fd51057b98a10fbb866246176dc" title="Status codes that may be returned by socket functions.">Status</a> receive(<span class="keywordtype">void</span>* data, std::size_t size, std::size_t&amp; received);
<a name="l00156"></a>00156 
<a name="l00169"></a>00169     <a class="code" href="classsf_1_1Socket.htm#a51bf0fd51057b98a10fbb866246176dc" title="Status codes that may be returned by socket functions.">Status</a> send(<a class="code" href="classsf_1_1Packet.htm" title="Utility class to build blocks of data to transfer over the network.">Packet</a>&amp; packet);
<a name="l00170"></a>00170 
<a name="l00185"></a>00185     <a class="code" href="classsf_1_1Socket.htm#a51bf0fd51057b98a10fbb866246176dc" title="Status codes that may be returned by socket functions.">Status</a> receive(<a class="code" href="classsf_1_1Packet.htm" title="Utility class to build blocks of data to transfer over the network.">Packet</a>&amp; packet);
<a name="l00186"></a>00186 
<a name="l00187"></a>00187 <span class="keyword">private</span>:
<a name="l00188"></a>00188 
<a name="l00189"></a>00189     <span class="keyword">friend</span> <span class="keyword">class </span><a class="code" href="classsf_1_1TcpListener.htm" title="Socket that listens to new TCP connections.">TcpListener</a>;
<a name="l00190"></a>00190 
<a name="l00195"></a>00195     <span class="keyword">struct </span>PendingPacket
<a name="l00196"></a>00196     {
<a name="l00197"></a>00197         PendingPacket();
<a name="l00198"></a>00198 
<a name="l00199"></a>00199         Uint32            Size;         
<a name="l00200"></a>00200         std::size_t       SizeReceived; 
<a name="l00201"></a>00201         std::vector&lt;char&gt; Data;         
<a name="l00202"></a>00202     };
<a name="l00203"></a>00203 
<a name="l00205"></a>00205     <span class="comment">// Member data</span>
<a name="l00207"></a>00207 <span class="comment"></span>    PendingPacket m_pendingPacket; 
<a name="l00208"></a>00208 };
<a name="l00209"></a>00209 
<a name="l00210"></a>00210 } <span class="comment">// namespace sf</span>
<a name="l00211"></a>00211 
<a name="l00212"></a>00212 
<a name="l00213"></a>00213 <span class="preprocessor">#endif // SFML_TCPSOCKET_HPP</span>
<a name="l00214"></a>00214 <span class="preprocessor"></span>
<a name="l00215"></a>00215 
</pre></div></div><!-- contents -->

        <p id="footer">
            &nbsp;::&nbsp; Copyright &copy; 2007-2008 Laurent Gomila, all rights reserved &nbsp;::&nbsp;
            Documentation generated by <a href="http://www.doxygen.org/" title="doxygen website">doxygen 1.5.2</a> &nbsp;::&nbsp;
        </p>

    </body>
</html>
