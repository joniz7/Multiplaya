<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<html>
    <head>
        <title>SFML - Simple and Fast Multimedia Library</title>
        <meta http-equiv="Content-Type" content="text/html;charset=UTF-8" />
        <link href="doxygen.css" rel="stylesheet" type="text/css" />
        <link href="tabs.css" rel="stylesheet" type="text/css" />
    </head>
    <body>
        <div id="logo">
            <img src="./logo.jpg" width="770" height="200" title="SFML home" alt="SFML logo" />
        </div>
<!-- Generated by Doxygen 1.7.6.1 -->
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.htm"><span>Main&#160;Page</span></a></li>
      <li><a href="modules.htm"><span>Modules</span></a></li>
      <li><a href="annotated.htm"><span>Classes</span></a></li>
      <li class="current"><a href="files.htm"><span>Files</span></a></li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="files.htm"><span>File&#160;List</span></a></li>
    </ul>
  </div>
</div>
<div class="header">
  <div class="headertitle">
<div class="title">View.hpp</div>  </div>
</div><!--header-->
<div class="contents">
<div class="fragment"><pre class="fragment"><a name="l00001"></a>00001 
<a name="l00002"></a>00002 <span class="comment">//</span>
<a name="l00003"></a>00003 <span class="comment">// SFML - Simple and Fast Multimedia Library</span>
<a name="l00004"></a>00004 <span class="comment">// Copyright (C) 2007-2012 Laurent Gomila (laurent.gom@gmail.com)</span>
<a name="l00005"></a>00005 <span class="comment">//</span>
<a name="l00006"></a>00006 <span class="comment">// This software is provided &#39;as-is&#39;, without any express or implied warranty.</span>
<a name="l00007"></a>00007 <span class="comment">// In no event will the authors be held liable for any damages arising from the use of this software.</span>
<a name="l00008"></a>00008 <span class="comment">//</span>
<a name="l00009"></a>00009 <span class="comment">// Permission is granted to anyone to use this software for any purpose,</span>
<a name="l00010"></a>00010 <span class="comment">// including commercial applications, and to alter it and redistribute it freely,</span>
<a name="l00011"></a>00011 <span class="comment">// subject to the following restrictions:</span>
<a name="l00012"></a>00012 <span class="comment">//</span>
<a name="l00013"></a>00013 <span class="comment">// 1. The origin of this software must not be misrepresented;</span>
<a name="l00014"></a>00014 <span class="comment">//    you must not claim that you wrote the original software.</span>
<a name="l00015"></a>00015 <span class="comment">//    If you use this software in a product, an acknowledgment</span>
<a name="l00016"></a>00016 <span class="comment">//    in the product documentation would be appreciated but is not required.</span>
<a name="l00017"></a>00017 <span class="comment">//</span>
<a name="l00018"></a>00018 <span class="comment">// 2. Altered source versions must be plainly marked as such,</span>
<a name="l00019"></a>00019 <span class="comment">//    and must not be misrepresented as being the original software.</span>
<a name="l00020"></a>00020 <span class="comment">//</span>
<a name="l00021"></a>00021 <span class="comment">// 3. This notice may not be removed or altered from any source distribution.</span>
<a name="l00022"></a>00022 <span class="comment">//</span>
<a name="l00024"></a>00024 <span class="comment"></span>
<a name="l00025"></a>00025 <span class="preprocessor">#ifndef SFML_VIEW_HPP</span>
<a name="l00026"></a>00026 <span class="preprocessor"></span><span class="preprocessor">#define SFML_VIEW_HPP</span>
<a name="l00027"></a>00027 <span class="preprocessor"></span>
<a name="l00029"></a>00029 <span class="comment">// Headers</span>
<a name="l00031"></a>00031 <span class="comment"></span><span class="preprocessor">#include &lt;SFML/Graphics/Export.hpp&gt;</span>
<a name="l00032"></a>00032 <span class="preprocessor">#include &lt;SFML/Graphics/Rect.hpp&gt;</span>
<a name="l00033"></a>00033 <span class="preprocessor">#include &lt;SFML/Graphics/Transform.hpp&gt;</span>
<a name="l00034"></a>00034 <span class="preprocessor">#include &lt;SFML/System/Vector2.hpp&gt;</span>
<a name="l00035"></a>00035 
<a name="l00036"></a>00036 
<a name="l00037"></a>00037 <span class="keyword">namespace </span>sf
<a name="l00038"></a>00038 {
<a name="l00043"></a><a class="code" href="classsf_1_1View.htm">00043</a> <span class="keyword">class </span>SFML_GRAPHICS_API <a class="code" href="classsf_1_1View.htm" title="2D camera that defines what region is shown on screen">View</a>
<a name="l00044"></a>00044 {
<a name="l00045"></a>00045 <span class="keyword">public</span> :
<a name="l00046"></a>00046 
<a name="l00053"></a>00053     <a class="code" href="classsf_1_1View.htm" title="2D camera that defines what region is shown on screen">View</a>();
<a name="l00054"></a>00054 
<a name="l00061"></a>00061     <span class="keyword">explicit</span> <a class="code" href="classsf_1_1View.htm" title="2D camera that defines what region is shown on screen">View</a>(<span class="keyword">const</span> <a class="code" href="classsf_1_1Rect.htm">FloatRect</a>&amp; rectangle);
<a name="l00062"></a>00062 
<a name="l00070"></a>00070     <a class="code" href="classsf_1_1View.htm" title="2D camera that defines what region is shown on screen">View</a>(<span class="keyword">const</span> <a class="code" href="classsf_1_1Vector2.htm">Vector2f</a>&amp; center, <span class="keyword">const</span> <a class="code" href="classsf_1_1Vector2.htm">Vector2f</a>&amp; size);
<a name="l00071"></a>00071 
<a name="l00081"></a>00081     <span class="keywordtype">void</span> setCenter(<span class="keywordtype">float</span> x, <span class="keywordtype">float</span> y);
<a name="l00082"></a>00082 
<a name="l00091"></a>00091     <span class="keywordtype">void</span> setCenter(<span class="keyword">const</span> <a class="code" href="classsf_1_1Vector2.htm">Vector2f</a>&amp; center);
<a name="l00092"></a>00092 
<a name="l00102"></a>00102     <span class="keywordtype">void</span> setSize(<span class="keywordtype">float</span> width, <span class="keywordtype">float</span> height);
<a name="l00103"></a>00103 
<a name="l00112"></a>00112     <span class="keywordtype">void</span> setSize(<span class="keyword">const</span> <a class="code" href="classsf_1_1Vector2.htm">Vector2f</a>&amp; size);
<a name="l00113"></a>00113 
<a name="l00124"></a>00124     <span class="keywordtype">void</span> setRotation(<span class="keywordtype">float</span> angle);
<a name="l00125"></a>00125 
<a name="l00141"></a>00141     <span class="keywordtype">void</span> setViewport(<span class="keyword">const</span> <a class="code" href="classsf_1_1Rect.htm">FloatRect</a>&amp; viewport);
<a name="l00142"></a>00142 
<a name="l00153"></a>00153     <span class="keywordtype">void</span> reset(<span class="keyword">const</span> <a class="code" href="classsf_1_1Rect.htm">FloatRect</a>&amp; rectangle);
<a name="l00154"></a>00154 
<a name="l00163"></a>00163     <span class="keyword">const</span> <a class="code" href="classsf_1_1Vector2.htm">Vector2f</a>&amp; getCenter() <span class="keyword">const</span>;
<a name="l00164"></a>00164 
<a name="l00173"></a>00173     <span class="keyword">const</span> <a class="code" href="classsf_1_1Vector2.htm">Vector2f</a>&amp; getSize() <span class="keyword">const</span>;
<a name="l00174"></a>00174 
<a name="l00183"></a>00183     <span class="keywordtype">float</span> getRotation() <span class="keyword">const</span>;
<a name="l00184"></a>00184 
<a name="l00193"></a>00193     <span class="keyword">const</span> <a class="code" href="classsf_1_1Rect.htm">FloatRect</a>&amp; getViewport() <span class="keyword">const</span>;
<a name="l00194"></a>00194 
<a name="l00204"></a>00204     <span class="keywordtype">void</span> move(<span class="keywordtype">float</span> offsetX, <span class="keywordtype">float</span> offsetY);
<a name="l00205"></a>00205 
<a name="l00214"></a>00214     <span class="keywordtype">void</span> move(<span class="keyword">const</span> <a class="code" href="classsf_1_1Vector2.htm">Vector2f</a>&amp; offset);
<a name="l00215"></a>00215 
<a name="l00224"></a>00224     <span class="keywordtype">void</span> rotate(<span class="keywordtype">float</span> angle);
<a name="l00225"></a>00225 
<a name="l00241"></a>00241     <span class="keywordtype">void</span> zoom(<span class="keywordtype">float</span> factor);
<a name="l00242"></a>00242 
<a name="l00253"></a>00253     <span class="keyword">const</span> <a class="code" href="classsf_1_1Transform.htm" title="Define a 3x3 transform matrix.">Transform</a>&amp; getTransform() <span class="keyword">const</span>;
<a name="l00254"></a>00254 
<a name="l00265"></a>00265     <span class="keyword">const</span> <a class="code" href="classsf_1_1Transform.htm" title="Define a 3x3 transform matrix.">Transform</a>&amp; getInverseTransform() <span class="keyword">const</span>;
<a name="l00266"></a>00266 
<a name="l00267"></a>00267 <span class="keyword">private</span> :
<a name="l00268"></a>00268 
<a name="l00270"></a>00270     <span class="comment">// Member data</span>
<a name="l00272"></a>00272 <span class="comment"></span>    <a class="code" href="classsf_1_1Vector2.htm">Vector2f</a>          m_center;              
<a name="l00273"></a>00273     <a class="code" href="classsf_1_1Vector2.htm">Vector2f</a>          m_size;                
<a name="l00274"></a>00274     <span class="keywordtype">float</span>             m_rotation;            
<a name="l00275"></a>00275     <a class="code" href="classsf_1_1Rect.htm">FloatRect</a>         m_viewport;            
<a name="l00276"></a>00276     <span class="keyword">mutable</span> <a class="code" href="classsf_1_1Transform.htm" title="Define a 3x3 transform matrix.">Transform</a> m_transform;           
<a name="l00277"></a>00277     <span class="keyword">mutable</span> <a class="code" href="classsf_1_1Transform.htm" title="Define a 3x3 transform matrix.">Transform</a> m_inverseTransform;    
<a name="l00278"></a>00278     <span class="keyword">mutable</span> <span class="keywordtype">bool</span>      m_transformUpdated;    
<a name="l00279"></a>00279     <span class="keyword">mutable</span> <span class="keywordtype">bool</span>      m_invTransformUpdated; 
<a name="l00280"></a>00280 };
<a name="l00281"></a>00281 
<a name="l00282"></a>00282 } <span class="comment">// namespace sf</span>
<a name="l00283"></a>00283 
<a name="l00284"></a>00284 
<a name="l00285"></a>00285 <span class="preprocessor">#endif // SFML_VIEW_HPP</span>
<a name="l00286"></a>00286 <span class="preprocessor"></span>
<a name="l00287"></a>00287 
</pre></div></div><!-- contents -->

        <p id="footer">
            &nbsp;::&nbsp; Copyright &copy; 2007-2008 Laurent Gomila, all rights reserved &nbsp;::&nbsp;
            Documentation generated by <a href="http://www.doxygen.org/" title="doxygen website">doxygen 1.5.2</a> &nbsp;::&nbsp;
        </p>

    </body>
</html>
