<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<html>
    <head>
        <title>SFML - Simple and Fast Multimedia Library</title>
        <meta http-equiv="Content-Type" content="text/html;charset=UTF-8" />
        <link href="doxygen.css" rel="stylesheet" type="text/css" />
        <link href="tabs.css" rel="stylesheet" type="text/css" />
    </head>
    <body>
        <div id="logo">
            <img src="./logo.jpg" width="770" height="200" title="SFML home" alt="SFML logo" />
        </div>
<!-- Generated by Doxygen 1.7.6.1 -->
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.htm"><span>Main&#160;Page</span></a></li>
      <li><a href="modules.htm"><span>Modules</span></a></li>
      <li class="current"><a href="annotated.htm"><span>Classes</span></a></li>
      <li><a href="files.htm"><span>Files</span></a></li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="annotated.htm"><span>Class&#160;List</span></a></li>
      <li><a href="classes.htm"><span>Class&#160;Index</span></a></li>
      <li><a href="hierarchy.htm"><span>Class&#160;Hierarchy</span></a></li>
      <li><a href="functions.htm"><span>Class&#160;Members</span></a></li>
    </ul>
  </div>
  <div id="nav-path" class="navpath">
    <ul>
      <li class="navelem"><b>sf</b>      </li>
      <li class="navelem"><a class="el" href="classsf_1_1TcpSocket.htm">TcpSocket</a>      </li>
    </ul>
  </div>
</div>
<div class="header">
  <div class="headertitle">
<div class="title">sf::TcpSocket Member List</div>  </div>
</div><!--header-->
<div class="contents">
This is the complete list of members for <a class="el" href="classsf_1_1TcpSocket.htm">sf::TcpSocket</a>, including all inherited members.<table>
  <tr class="memlist"><td><a class="el" href="classsf_1_1Socket.htm#a5deb2c955fd347259c3a20d27b2481aaa5a3c30fd128895403afc11076f461b19">AnyPort</a> enum value</td><td><a class="el" href="classsf_1_1Socket.htm">sf::Socket</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="classsf_1_1Socket.htm#a71f2f5c2aa99e01cafe824fee4c573be">close</a>()</td><td><a class="el" href="classsf_1_1Socket.htm">sf::Socket</a></td><td><code> [protected]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classsf_1_1TcpSocket.htm#a68cd42d5ab70ab54b16787f555951c40">connect</a>(const IpAddress &amp;remoteAddress, unsigned short remotePort, Time timeout=Time::Zero)</td><td><a class="el" href="classsf_1_1TcpSocket.htm">sf::TcpSocket</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="classsf_1_1Socket.htm#aafbe140f4b1921e0d19e88cf7a61dcbc">create</a>()</td><td><a class="el" href="classsf_1_1Socket.htm">sf::Socket</a></td><td><code> [protected]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classsf_1_1Socket.htm#af1dd898f7aa3ead7ff7b2d1c20e97781">create</a>(SocketHandle handle)</td><td><a class="el" href="classsf_1_1Socket.htm">sf::Socket</a></td><td><code> [protected]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classsf_1_1TcpSocket.htm#ac18f518a9be3d6be5e74b9404c253c1e">disconnect</a>()</td><td><a class="el" href="classsf_1_1TcpSocket.htm">sf::TcpSocket</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="classsf_1_1Socket.htm#a51bf0fd51057b98a10fbb866246176dcab215141f756acdc23c67fad149710eb1">Disconnected</a> enum value</td><td><a class="el" href="classsf_1_1Socket.htm">sf::Socket</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="classsf_1_1Socket.htm#a51bf0fd51057b98a10fbb866246176dca1de3a85bc56d3ae85b3d0f3cfd04ae90">Done</a> enum value</td><td><a class="el" href="classsf_1_1Socket.htm">sf::Socket</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="classsf_1_1Socket.htm#a51bf0fd51057b98a10fbb866246176dca1dc9854433a28c22e192721179a2df5d">Error</a> enum value</td><td><a class="el" href="classsf_1_1Socket.htm">sf::Socket</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="classsf_1_1Socket.htm#ac0c63b13e61da8294bf54e888e97f9a3">getHandle</a>() const </td><td><a class="el" href="classsf_1_1Socket.htm">sf::Socket</a></td><td><code> [protected]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classsf_1_1TcpSocket.htm#ab47eeb1cb71f2f251a83bc823773f1b3">getLocalPort</a>() const </td><td><a class="el" href="classsf_1_1TcpSocket.htm">sf::TcpSocket</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="classsf_1_1TcpSocket.htm#a7904ca6ab9e018021e305a3aeb7a1b9a">getRemoteAddress</a>() const </td><td><a class="el" href="classsf_1_1TcpSocket.htm">sf::TcpSocket</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="classsf_1_1TcpSocket.htm#abc05220e06f1522144cecab822e79296">getRemotePort</a>() const </td><td><a class="el" href="classsf_1_1TcpSocket.htm">sf::TcpSocket</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="classsf_1_1Socket.htm#a0ec0d831b015e32eb5935fd2a9f8c67c">isBlocking</a>() const </td><td><a class="el" href="classsf_1_1Socket.htm">sf::Socket</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="classsf_1_1Socket.htm#a51bf0fd51057b98a10fbb866246176dca8554848daae98f996e131bdeed076c09">NotReady</a> enum value</td><td><a class="el" href="classsf_1_1Socket.htm">sf::Socket</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="classsf_1_1TcpSocket.htm#a90ce50811ea61d4f00efc62bb99ae1af">receive</a>(void *data, std::size_t size, std::size_t &amp;received)</td><td><a class="el" href="classsf_1_1TcpSocket.htm">sf::TcpSocket</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="classsf_1_1TcpSocket.htm#aa655352609bc9804f2baa020df3e7331">receive</a>(Packet &amp;packet)</td><td><a class="el" href="classsf_1_1TcpSocket.htm">sf::TcpSocket</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="classsf_1_1TcpSocket.htm#affce26ab3bcc4f5b9269dad79db544c0">send</a>(const void *data, std::size_t size)</td><td><a class="el" href="classsf_1_1TcpSocket.htm">sf::TcpSocket</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="classsf_1_1TcpSocket.htm#a0f8276e2b1c75aac4a7b0a707b250f44">send</a>(Packet &amp;packet)</td><td><a class="el" href="classsf_1_1TcpSocket.htm">sf::TcpSocket</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="classsf_1_1Socket.htm#a165fc1423e281ea2714c70303d3a9782">setBlocking</a>(bool blocking)</td><td><a class="el" href="classsf_1_1Socket.htm">sf::Socket</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="classsf_1_1Socket.htm#a80ffb47ec0bafc83af019055d3e6a303">Socket</a>(Type type)</td><td><a class="el" href="classsf_1_1Socket.htm">sf::Socket</a></td><td><code> [protected]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classsf_1_1Socket.htm#a51bf0fd51057b98a10fbb866246176dc">Status</a> enum name</td><td><a class="el" href="classsf_1_1Socket.htm">sf::Socket</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="classsf_1_1Socket.htm#a5d3ff44e56e68f02816bb0fabc34adf8acc02e97e90234b957eaad4dff7f22214">Tcp</a> enum value</td><td><a class="el" href="classsf_1_1Socket.htm">sf::Socket</a></td><td><code> [protected]</code></td></tr>
  <tr bgcolor="#f0f0f0"><td><b>TcpListener</b> (defined in <a class="el" href="classsf_1_1TcpSocket.htm">sf::TcpSocket</a>)</td><td><a class="el" href="classsf_1_1TcpSocket.htm">sf::TcpSocket</a></td><td><code> [friend]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classsf_1_1TcpSocket.htm#a62a9bf81fd7f15fedb29fd1348483236">TcpSocket</a>()</td><td><a class="el" href="classsf_1_1TcpSocket.htm">sf::TcpSocket</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="classsf_1_1Socket.htm#a5d3ff44e56e68f02816bb0fabc34adf8">Type</a> enum name</td><td><a class="el" href="classsf_1_1Socket.htm">sf::Socket</a></td><td><code> [protected]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classsf_1_1Socket.htm#a5d3ff44e56e68f02816bb0fabc34adf8a6ebf3094830db4820191a327f3cc6ce2">Udp</a> enum value</td><td><a class="el" href="classsf_1_1Socket.htm">sf::Socket</a></td><td><code> [protected]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classsf_1_1Socket.htm#a79a4b5918f0b34a2f8db449089694788">~Socket</a>()</td><td><a class="el" href="classsf_1_1Socket.htm">sf::Socket</a></td><td><code> [virtual]</code></td></tr>
</table></div><!-- contents -->

        <p id="footer">
            &nbsp;::&nbsp; Copyright &copy; 2007-2008 Laurent Gomila, all rights reserved &nbsp;::&nbsp;
            Documentation generated by <a href="http://www.doxygen.org/" title="doxygen website">doxygen 1.5.2</a> &nbsp;::&nbsp;
        </p>

    </body>
</html>
