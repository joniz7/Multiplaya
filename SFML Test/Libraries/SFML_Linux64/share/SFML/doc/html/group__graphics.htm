<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<html>
    <head>
        <title>SFML - Simple and Fast Multimedia Library</title>
        <meta http-equiv="Content-Type" content="text/html;charset=UTF-8" />
        <link href="doxygen.css" rel="stylesheet" type="text/css" />
        <link href="tabs.css" rel="stylesheet" type="text/css" />
    </head>
    <body>
        <div id="logo">
            <img src="./logo.jpg" width="770" height="200" title="SFML home" alt="SFML logo" />
        </div>
<!-- Generated by Doxygen 1.7.6.1 -->
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.htm"><span>Main&#160;Page</span></a></li>
      <li><a href="modules.htm"><span>Modules</span></a></li>
      <li><a href="annotated.htm"><span>Classes</span></a></li>
      <li><a href="files.htm"><span>Files</span></a></li>
    </ul>
  </div>
</div>
<div class="header">
  <div class="summary">
<a href="#nested-classes">Classes</a> &#124;
<a href="#enum-members">Enumerations</a>  </div>
  <div class="headertitle">
<div class="title">Graphics module</div>  </div>
</div><!--header-->
<div class="contents">
<table class="memberdecls">
<tr><td colspan="2"><h2><a name="nested-classes"></a>
Classes</h2></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsf_1_1CircleShape.htm">sf::CircleShape</a></td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Specialized shape representing a circle.  <a href="classsf_1_1CircleShape.htm#details">More...</a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsf_1_1Color.htm">sf::Color</a></td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Utility class for manpulating RGBA colors.  <a href="classsf_1_1Color.htm#details">More...</a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsf_1_1ConvexShape.htm">sf::ConvexShape</a></td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Specialized shape representing a convex polygon.  <a href="classsf_1_1ConvexShape.htm#details">More...</a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsf_1_1Drawable.htm">sf::Drawable</a></td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Abstract base class for objects that can be drawn to a render target.  <a href="classsf_1_1Drawable.htm#details">More...</a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsf_1_1Font.htm">sf::Font</a></td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Class for loading and manipulating character fonts.  <a href="classsf_1_1Font.htm#details">More...</a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsf_1_1Glyph.htm">sf::Glyph</a></td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Structure describing a glyph.  <a href="classsf_1_1Glyph.htm#details">More...</a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsf_1_1Image.htm">sf::Image</a></td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Class for loading, manipulating and saving images.  <a href="classsf_1_1Image.htm#details">More...</a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsf_1_1Rect.htm">sf::Rect&lt; T &gt;</a></td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Utility class for manipulating 2D axis aligned rectangles.  <a href="classsf_1_1Rect.htm#details">More...</a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsf_1_1RectangleShape.htm">sf::RectangleShape</a></td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Specialized shape representing a rectangle.  <a href="classsf_1_1RectangleShape.htm#details">More...</a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsf_1_1RenderStates.htm">sf::RenderStates</a></td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Define the states used for drawing to a <a class="el" href="classsf_1_1RenderTarget.htm" title="Base class for all render targets (window, texture, ...)">RenderTarget</a>.  <a href="classsf_1_1RenderStates.htm#details">More...</a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsf_1_1RenderTarget.htm">sf::RenderTarget</a></td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Base class for all render targets (window, texture, ...)  <a href="classsf_1_1RenderTarget.htm#details">More...</a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsf_1_1RenderTexture.htm">sf::RenderTexture</a></td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Target for off-screen 2D rendering into an texture.  <a href="classsf_1_1RenderTexture.htm#details">More...</a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsf_1_1RenderWindow.htm">sf::RenderWindow</a></td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight"><a class="el" href="classsf_1_1Window.htm" title="Window that serves as a target for OpenGL rendering.">Window</a> that can serve as a target for 2D drawing.  <a href="classsf_1_1RenderWindow.htm#details">More...</a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsf_1_1Shader.htm">sf::Shader</a></td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight"><a class="el" href="classsf_1_1Shader.htm" title="Shader class (vertex and fragment)">Shader</a> class (vertex and fragment)  <a href="classsf_1_1Shader.htm#details">More...</a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsf_1_1Shape.htm">sf::Shape</a></td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Base class for textured shapes with outline.  <a href="classsf_1_1Shape.htm#details">More...</a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsf_1_1Sprite.htm">sf::Sprite</a></td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight"><a class="el" href="classsf_1_1Drawable.htm" title="Abstract base class for objects that can be drawn to a render target.">Drawable</a> representation of a texture, with its own transformations, color, etc.  <a href="classsf_1_1Sprite.htm#details">More...</a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsf_1_1Text.htm">sf::Text</a></td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Graphical text that can be drawn to a render target.  <a href="classsf_1_1Text.htm#details">More...</a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsf_1_1Texture.htm">sf::Texture</a></td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight"><a class="el" href="classsf_1_1Image.htm" title="Class for loading, manipulating and saving images.">Image</a> living on the graphics card that can be used for drawing.  <a href="classsf_1_1Texture.htm#details">More...</a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsf_1_1Transform.htm">sf::Transform</a></td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Define a 3x3 transform matrix.  <a href="classsf_1_1Transform.htm#details">More...</a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsf_1_1Transformable.htm">sf::Transformable</a></td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Decomposed transform defined by a position, a rotation and a scale.  <a href="classsf_1_1Transformable.htm#details">More...</a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsf_1_1Vertex.htm">sf::Vertex</a></td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Define a point with color and texture coordinates.  <a href="classsf_1_1Vertex.htm#details">More...</a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsf_1_1VertexArray.htm">sf::VertexArray</a></td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Define a set of one or more 2D primitives.  <a href="classsf_1_1VertexArray.htm#details">More...</a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsf_1_1View.htm">sf::View</a></td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">2D camera that defines what region is shown on screen  <a href="classsf_1_1View.htm#details">More...</a><br/></td></tr>
<tr><td colspan="2"><h2><a name="enum-members"></a>
Enumerations</h2></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">enum &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__graphics.htm#ga80c52fe2f7050d7f7573b7ed3c995388">sf::BlendMode</a> { <br/>
&#160;&#160;<a class="el" href="group__graphics.htm#gga80c52fe2f7050d7f7573b7ed3c995388aaf30f92cf1471a031fce5d61e8674996">sf::BlendAlpha</a>, 
<br/>
&#160;&#160;<a class="el" href="group__graphics.htm#gga80c52fe2f7050d7f7573b7ed3c995388afc35de7c9fe26776b839cfe0027b16da">sf::BlendAdd</a>, 
<br/>
&#160;&#160;<a class="el" href="group__graphics.htm#gga80c52fe2f7050d7f7573b7ed3c995388a8adc43071db8f20e508c35e172195234">sf::BlendMultiply</a>, 
<br/>
&#160;&#160;<a class="el" href="group__graphics.htm#gga80c52fe2f7050d7f7573b7ed3c995388abe282fb5f49c20b6439cbec9d4f63722">sf::BlendNone</a>
<br/>
 }</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Available blending modes for drawing.  <a href="group__graphics.htm#ga80c52fe2f7050d7f7573b7ed3c995388">More...</a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">enum &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__graphics.htm#ga5ee56ac1339984909610713096283b1b">sf::PrimitiveType</a> { <br/>
&#160;&#160;<a class="el" href="group__graphics.htm#gga5ee56ac1339984909610713096283b1bac7097d3e01778b9318def1f7ac35a785">sf::Points</a>, 
<br/>
&#160;&#160;<a class="el" href="group__graphics.htm#gga5ee56ac1339984909610713096283b1ba2bf015eeff9f798dfc3d6d744d669f1e">sf::Lines</a>, 
<br/>
&#160;&#160;<a class="el" href="group__graphics.htm#gga5ee56ac1339984909610713096283b1ba5b09910f5d0f39641342184ccd0d1de3">sf::LinesStrip</a>, 
<br/>
&#160;&#160;<a class="el" href="group__graphics.htm#gga5ee56ac1339984909610713096283b1ba880a7aa72c20b9f9beb7eb64d2434670">sf::Triangles</a>, 
<br/>
&#160;&#160;<a class="el" href="group__graphics.htm#gga5ee56ac1339984909610713096283b1ba66643dbbb24bbacb405973ed80eebae0">sf::TrianglesStrip</a>, 
<br/>
&#160;&#160;<a class="el" href="group__graphics.htm#gga5ee56ac1339984909610713096283b1ba5338a2c6d922151fe50f235036af8a20">sf::TrianglesFan</a>, 
<br/>
&#160;&#160;<a class="el" href="group__graphics.htm#gga5ee56ac1339984909610713096283b1ba5041359b76b4bd3d3e6ef738826b8743">sf::Quads</a>
<br/>
 }</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Types of primitives that a <a class="el" href="classsf_1_1VertexArray.htm" title="Define a set of one or more 2D primitives.">sf::VertexArray</a> can render.  <a href="group__graphics.htm#ga5ee56ac1339984909610713096283b1b">More...</a><br/></td></tr>
</table>
<hr/><h2>Enumeration Type Documentation</h2>
<a class="anchor" id="ga80c52fe2f7050d7f7573b7ed3c995388"></a><!-- doxytag: member="sf::BlendMode" ref="ga80c52fe2f7050d7f7573b7ed3c995388" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">enum <a class="el" href="group__graphics.htm#ga80c52fe2f7050d7f7573b7ed3c995388">sf::BlendMode</a></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Available blending modes for drawing. </p>
<dl><dt><b>Enumerator: </b></dt><dd><table border="0" cellspacing="2" cellpadding="0">
<tr><td valign="top"><em><a class="anchor" id="gga80c52fe2f7050d7f7573b7ed3c995388aaf30f92cf1471a031fce5d61e8674996"></a><!-- doxytag: member="BlendAlpha" ref="gga80c52fe2f7050d7f7573b7ed3c995388aaf30f92cf1471a031fce5d61e8674996" args="" -->BlendAlpha</em>&nbsp;</td><td>
<p>Pixel = Source * Source.a + Dest * (1 - Source.a) </p>
</td></tr>
<tr><td valign="top"><em><a class="anchor" id="gga80c52fe2f7050d7f7573b7ed3c995388afc35de7c9fe26776b839cfe0027b16da"></a><!-- doxytag: member="BlendAdd" ref="gga80c52fe2f7050d7f7573b7ed3c995388afc35de7c9fe26776b839cfe0027b16da" args="" -->BlendAdd</em>&nbsp;</td><td>
<p>Pixel = Source + Dest. </p>
</td></tr>
<tr><td valign="top"><em><a class="anchor" id="gga80c52fe2f7050d7f7573b7ed3c995388a8adc43071db8f20e508c35e172195234"></a><!-- doxytag: member="BlendMultiply" ref="gga80c52fe2f7050d7f7573b7ed3c995388a8adc43071db8f20e508c35e172195234" args="" -->BlendMultiply</em>&nbsp;</td><td>
<p>Pixel = Source * Dest. </p>
</td></tr>
<tr><td valign="top"><em><a class="anchor" id="gga80c52fe2f7050d7f7573b7ed3c995388abe282fb5f49c20b6439cbec9d4f63722"></a><!-- doxytag: member="BlendNone" ref="gga80c52fe2f7050d7f7573b7ed3c995388abe282fb5f49c20b6439cbec9d4f63722" args="" -->BlendNone</em>&nbsp;</td><td>
<p>Pixel = Source. </p>
</td></tr>
</table>
</dd>
</dl>

<p>Definition at line <a class="el" href="BlendMode_8hpp_source.htm#l00035">35</a> of file <a class="el" href="BlendMode_8hpp_source.htm">BlendMode.hpp</a>.</p>

</div>
</div>
<a class="anchor" id="ga5ee56ac1339984909610713096283b1b"></a><!-- doxytag: member="sf::PrimitiveType" ref="ga5ee56ac1339984909610713096283b1b" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">enum <a class="el" href="group__graphics.htm#ga5ee56ac1339984909610713096283b1b">sf::PrimitiveType</a></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Types of primitives that a <a class="el" href="classsf_1_1VertexArray.htm" title="Define a set of one or more 2D primitives.">sf::VertexArray</a> can render. </p>
<p>Points and lines have no area, therefore their thickness will always be 1 pixel, regarldess the current transform and view. </p>
<dl><dt><b>Enumerator: </b></dt><dd><table border="0" cellspacing="2" cellpadding="0">
<tr><td valign="top"><em><a class="anchor" id="gga5ee56ac1339984909610713096283b1bac7097d3e01778b9318def1f7ac35a785"></a><!-- doxytag: member="Points" ref="gga5ee56ac1339984909610713096283b1bac7097d3e01778b9318def1f7ac35a785" args="" -->Points</em>&nbsp;</td><td>
<p>List of individual points. </p>
</td></tr>
<tr><td valign="top"><em><a class="anchor" id="gga5ee56ac1339984909610713096283b1ba2bf015eeff9f798dfc3d6d744d669f1e"></a><!-- doxytag: member="Lines" ref="gga5ee56ac1339984909610713096283b1ba2bf015eeff9f798dfc3d6d744d669f1e" args="" -->Lines</em>&nbsp;</td><td>
<p>List of individual lines. </p>
</td></tr>
<tr><td valign="top"><em><a class="anchor" id="gga5ee56ac1339984909610713096283b1ba5b09910f5d0f39641342184ccd0d1de3"></a><!-- doxytag: member="LinesStrip" ref="gga5ee56ac1339984909610713096283b1ba5b09910f5d0f39641342184ccd0d1de3" args="" -->LinesStrip</em>&nbsp;</td><td>
<p>List of connected lines, a point uses the previous point to form a line. </p>
</td></tr>
<tr><td valign="top"><em><a class="anchor" id="gga5ee56ac1339984909610713096283b1ba880a7aa72c20b9f9beb7eb64d2434670"></a><!-- doxytag: member="Triangles" ref="gga5ee56ac1339984909610713096283b1ba880a7aa72c20b9f9beb7eb64d2434670" args="" -->Triangles</em>&nbsp;</td><td>
<p>List of individual triangles. </p>
</td></tr>
<tr><td valign="top"><em><a class="anchor" id="gga5ee56ac1339984909610713096283b1ba66643dbbb24bbacb405973ed80eebae0"></a><!-- doxytag: member="TrianglesStrip" ref="gga5ee56ac1339984909610713096283b1ba66643dbbb24bbacb405973ed80eebae0" args="" -->TrianglesStrip</em>&nbsp;</td><td>
<p>List of connected triangles, a point uses the two previous points to form a triangle. </p>
</td></tr>
<tr><td valign="top"><em><a class="anchor" id="gga5ee56ac1339984909610713096283b1ba5338a2c6d922151fe50f235036af8a20"></a><!-- doxytag: member="TrianglesFan" ref="gga5ee56ac1339984909610713096283b1ba5338a2c6d922151fe50f235036af8a20" args="" -->TrianglesFan</em>&nbsp;</td><td>
<p>List of connected triangles, a point uses the common center and the previous point to form a triangle. </p>
</td></tr>
<tr><td valign="top"><em><a class="anchor" id="gga5ee56ac1339984909610713096283b1ba5041359b76b4bd3d3e6ef738826b8743"></a><!-- doxytag: member="Quads" ref="gga5ee56ac1339984909610713096283b1ba5041359b76b4bd3d3e6ef738826b8743" args="" -->Quads</em>&nbsp;</td><td>
<p>List of individual quads. </p>
</td></tr>
</table>
</dd>
</dl>

<p>Definition at line <a class="el" href="PrimitiveType_8hpp_source.htm#l00039">39</a> of file <a class="el" href="PrimitiveType_8hpp_source.htm">PrimitiveType.hpp</a>.</p>

</div>
</div>
</div><!-- contents -->

        <p id="footer">
            &nbsp;::&nbsp; Copyright &copy; 2007-2008 Laurent Gomila, all rights reserved &nbsp;::&nbsp;
            Documentation generated by <a href="http://www.doxygen.org/" title="doxygen website">doxygen 1.5.2</a> &nbsp;::&nbsp;
        </p>

    </body>
</html>
