<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<html>
    <head>
        <title>SFML - Simple and Fast Multimedia Library</title>
        <meta http-equiv="Content-Type" content="text/html;charset=UTF-8" />
        <link href="doxygen.css" rel="stylesheet" type="text/css" />
        <link href="tabs.css" rel="stylesheet" type="text/css" />
    </head>
    <body>
        <div id="logo">
            <img src="./logo.jpg" width="770" height="200" title="SFML home" alt="SFML logo" />
        </div>
<!-- Generated by Doxygen 1.7.6.1 -->
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.htm"><span>Main&#160;Page</span></a></li>
      <li><a href="modules.htm"><span>Modules</span></a></li>
      <li><a href="annotated.htm"><span>Classes</span></a></li>
      <li class="current"><a href="files.htm"><span>Files</span></a></li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="files.htm"><span>File&#160;List</span></a></li>
    </ul>
  </div>
</div>
<div class="header">
  <div class="headertitle">
<div class="title">Shape.hpp</div>  </div>
</div><!--header-->
<div class="contents">
<div class="fragment"><pre class="fragment"><a name="l00001"></a>00001 
<a name="l00002"></a>00002 <span class="comment">//</span>
<a name="l00003"></a>00003 <span class="comment">// SFML - Simple and Fast Multimedia Library</span>
<a name="l00004"></a>00004 <span class="comment">// Copyright (C) 2007-2012 Laurent Gomila (laurent.gom@gmail.com)</span>
<a name="l00005"></a>00005 <span class="comment">//</span>
<a name="l00006"></a>00006 <span class="comment">// This software is provided &#39;as-is&#39;, without any express or implied warranty.</span>
<a name="l00007"></a>00007 <span class="comment">// In no event will the authors be held liable for any damages arising from the use of this software.</span>
<a name="l00008"></a>00008 <span class="comment">//</span>
<a name="l00009"></a>00009 <span class="comment">// Permission is granted to anyone to use this software for any purpose,</span>
<a name="l00010"></a>00010 <span class="comment">// including commercial applications, and to alter it and redistribute it freely,</span>
<a name="l00011"></a>00011 <span class="comment">// subject to the following restrictions:</span>
<a name="l00012"></a>00012 <span class="comment">//</span>
<a name="l00013"></a>00013 <span class="comment">// 1. The origin of this software must not be misrepresented;</span>
<a name="l00014"></a>00014 <span class="comment">//    you must not claim that you wrote the original software.</span>
<a name="l00015"></a>00015 <span class="comment">//    If you use this software in a product, an acknowledgment</span>
<a name="l00016"></a>00016 <span class="comment">//    in the product documentation would be appreciated but is not required.</span>
<a name="l00017"></a>00017 <span class="comment">//</span>
<a name="l00018"></a>00018 <span class="comment">// 2. Altered source versions must be plainly marked as such,</span>
<a name="l00019"></a>00019 <span class="comment">//    and must not be misrepresented as being the original software.</span>
<a name="l00020"></a>00020 <span class="comment">//</span>
<a name="l00021"></a>00021 <span class="comment">// 3. This notice may not be removed or altered from any source distribution.</span>
<a name="l00022"></a>00022 <span class="comment">//</span>
<a name="l00024"></a>00024 <span class="comment"></span>
<a name="l00025"></a>00025 <span class="preprocessor">#ifndef SFML_SHAPE_HPP</span>
<a name="l00026"></a>00026 <span class="preprocessor"></span><span class="preprocessor">#define SFML_SHAPE_HPP</span>
<a name="l00027"></a>00027 <span class="preprocessor"></span>
<a name="l00029"></a>00029 <span class="comment">// Headers</span>
<a name="l00031"></a>00031 <span class="comment"></span><span class="preprocessor">#include &lt;SFML/Graphics/Export.hpp&gt;</span>
<a name="l00032"></a>00032 <span class="preprocessor">#include &lt;SFML/Graphics/Drawable.hpp&gt;</span>
<a name="l00033"></a>00033 <span class="preprocessor">#include &lt;SFML/Graphics/Transformable.hpp&gt;</span>
<a name="l00034"></a>00034 <span class="preprocessor">#include &lt;SFML/Graphics/VertexArray.hpp&gt;</span>
<a name="l00035"></a>00035 <span class="preprocessor">#include &lt;SFML/System/Vector2.hpp&gt;</span>
<a name="l00036"></a>00036 
<a name="l00037"></a>00037 
<a name="l00038"></a>00038 <span class="keyword">namespace </span>sf
<a name="l00039"></a>00039 {
<a name="l00044"></a><a class="code" href="classsf_1_1Shape.htm">00044</a> <span class="keyword">class </span>SFML_GRAPHICS_API <a class="code" href="classsf_1_1Shape.htm" title="Base class for textured shapes with outline.">Shape</a> : <span class="keyword">public</span> <a class="code" href="classsf_1_1Drawable.htm" title="Abstract base class for objects that can be drawn to a render target.">Drawable</a>, <span class="keyword">public</span> <a class="code" href="classsf_1_1Transformable.htm" title="Decomposed transform defined by a position, a rotation and a scale.">Transformable</a>
<a name="l00045"></a>00045 {
<a name="l00046"></a>00046 <span class="keyword">public</span> :
<a name="l00047"></a>00047 
<a name="l00052"></a>00052     <span class="keyword">virtual</span> ~<a class="code" href="classsf_1_1Shape.htm" title="Base class for textured shapes with outline.">Shape</a>();
<a name="l00053"></a>00053 
<a name="l00074"></a>00074     <span class="keywordtype">void</span> setTexture(<span class="keyword">const</span> <a class="code" href="classsf_1_1Texture.htm" title="Image living on the graphics card that can be used for drawing.">Texture</a>* texture, <span class="keywordtype">bool</span> resetRect = <span class="keyword">false</span>);
<a name="l00075"></a>00075 
<a name="l00088"></a>00088     <span class="keywordtype">void</span> setTextureRect(<span class="keyword">const</span> <a class="code" href="classsf_1_1Rect.htm">IntRect</a>&amp; rect);
<a name="l00089"></a>00089 
<a name="l00105"></a>00105     <span class="keywordtype">void</span> setFillColor(<span class="keyword">const</span> <a class="code" href="classsf_1_1Color.htm" title="Utility class for manpulating RGBA colors.">Color</a>&amp; color);
<a name="l00106"></a>00106 
<a name="l00118"></a>00118     <span class="keywordtype">void</span> setOutlineColor(<span class="keyword">const</span> <a class="code" href="classsf_1_1Color.htm" title="Utility class for manpulating RGBA colors.">Color</a>&amp; color);
<a name="l00119"></a>00119 
<a name="l00132"></a>00132     <span class="keywordtype">void</span> setOutlineThickness(<span class="keywordtype">float</span> thickness);
<a name="l00133"></a>00133 
<a name="l00146"></a>00146     <span class="keyword">const</span> <a class="code" href="classsf_1_1Texture.htm" title="Image living on the graphics card that can be used for drawing.">Texture</a>* getTexture() <span class="keyword">const</span>;
<a name="l00147"></a>00147 
<a name="l00156"></a>00156     <span class="keyword">const</span> <a class="code" href="classsf_1_1Rect.htm">IntRect</a>&amp; getTextureRect() <span class="keyword">const</span>;
<a name="l00157"></a>00157 
<a name="l00166"></a>00166     <span class="keyword">const</span> <a class="code" href="classsf_1_1Color.htm" title="Utility class for manpulating RGBA colors.">Color</a>&amp; getFillColor() <span class="keyword">const</span>;
<a name="l00167"></a>00167 
<a name="l00176"></a>00176     <span class="keyword">const</span> <a class="code" href="classsf_1_1Color.htm" title="Utility class for manpulating RGBA colors.">Color</a>&amp; getOutlineColor() <span class="keyword">const</span>;
<a name="l00177"></a>00177 
<a name="l00186"></a>00186     <span class="keywordtype">float</span> getOutlineThickness() <span class="keyword">const</span>;
<a name="l00187"></a>00187 
<a name="l00196"></a>00196     <span class="keyword">virtual</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> getPointCount() <span class="keyword">const</span> = 0;
<a name="l00197"></a>00197 
<a name="l00210"></a>00210     <span class="keyword">virtual</span> <a class="code" href="classsf_1_1Vector2.htm">Vector2f</a> getPoint(<span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> index) <span class="keyword">const</span> = 0;
<a name="l00211"></a>00211 
<a name="l00224"></a>00224     <a class="code" href="classsf_1_1Rect.htm">FloatRect</a> getLocalBounds() <span class="keyword">const</span>;
<a name="l00225"></a>00225 
<a name="l00238"></a>00238     <a class="code" href="classsf_1_1Rect.htm">FloatRect</a> getGlobalBounds() <span class="keyword">const</span>;
<a name="l00239"></a>00239 
<a name="l00240"></a>00240 <span class="keyword">protected</span> :
<a name="l00241"></a>00241 
<a name="l00246"></a>00246     <a class="code" href="classsf_1_1Shape.htm" title="Base class for textured shapes with outline.">Shape</a>();
<a name="l00247"></a>00247 
<a name="l00256"></a>00256     <span class="keywordtype">void</span> update();
<a name="l00257"></a>00257 
<a name="l00258"></a>00258 <span class="keyword">private</span> :
<a name="l00259"></a>00259 
<a name="l00267"></a>00267     <span class="keyword">virtual</span> <span class="keywordtype">void</span> draw(<a class="code" href="classsf_1_1RenderTarget.htm" title="Base class for all render targets (window, texture, ...)">RenderTarget</a>&amp; target, <a class="code" href="classsf_1_1RenderStates.htm" title="Define the states used for drawing to a RenderTarget.">RenderStates</a> states) <span class="keyword">const</span>;
<a name="l00268"></a>00268 
<a name="l00273"></a>00273     <span class="keywordtype">void</span> updateFillColors();
<a name="l00274"></a>00274 
<a name="l00279"></a>00279     <span class="keywordtype">void</span> updateTexCoords();
<a name="l00280"></a>00280 
<a name="l00285"></a>00285     <span class="keywordtype">void</span> updateOutline();
<a name="l00286"></a>00286 
<a name="l00291"></a>00291     <span class="keywordtype">void</span> updateOutlineColors();
<a name="l00292"></a>00292 
<a name="l00293"></a>00293 <span class="keyword">private</span> :
<a name="l00294"></a>00294 
<a name="l00296"></a>00296     <span class="comment">// Member data</span>
<a name="l00298"></a>00298 <span class="comment"></span>    <span class="keyword">const</span> <a class="code" href="classsf_1_1Texture.htm" title="Image living on the graphics card that can be used for drawing.">Texture</a>* m_texture;          
<a name="l00299"></a>00299     <a class="code" href="classsf_1_1Rect.htm">IntRect</a>        m_textureRect;      
<a name="l00300"></a>00300     <a class="code" href="classsf_1_1Color.htm" title="Utility class for manpulating RGBA colors.">Color</a>          m_fillColor;        
<a name="l00301"></a>00301     <a class="code" href="classsf_1_1Color.htm" title="Utility class for manpulating RGBA colors.">Color</a>          m_outlineColor;     
<a name="l00302"></a>00302     <span class="keywordtype">float</span>          m_outlineThickness; 
<a name="l00303"></a>00303     <a class="code" href="classsf_1_1VertexArray.htm" title="Define a set of one or more 2D primitives.">VertexArray</a>    m_vertices;         
<a name="l00304"></a>00304     <a class="code" href="classsf_1_1VertexArray.htm" title="Define a set of one or more 2D primitives.">VertexArray</a>    m_outlineVertices;  
<a name="l00305"></a>00305     <a class="code" href="classsf_1_1Rect.htm">FloatRect</a>      m_insideBounds;     
<a name="l00306"></a>00306     <a class="code" href="classsf_1_1Rect.htm">FloatRect</a>      m_bounds;           
<a name="l00307"></a>00307 };
<a name="l00308"></a>00308 
<a name="l00309"></a>00309 } <span class="comment">// namespace sf</span>
<a name="l00310"></a>00310 
<a name="l00311"></a>00311 
<a name="l00312"></a>00312 <span class="preprocessor">#endif // SFML_SHAPE_HPP</span>
<a name="l00313"></a>00313 <span class="preprocessor"></span>
<a name="l00314"></a>00314 
</pre></div></div><!-- contents -->

        <p id="footer">
            &nbsp;::&nbsp; Copyright &copy; 2007-2008 Laurent Gomila, all rights reserved &nbsp;::&nbsp;
            Documentation generated by <a href="http://www.doxygen.org/" title="doxygen website">doxygen 1.5.2</a> &nbsp;::&nbsp;
        </p>

    </body>
</html>
