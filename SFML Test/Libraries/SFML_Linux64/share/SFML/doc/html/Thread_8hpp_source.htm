<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<html>
    <head>
        <title>SFML - Simple and Fast Multimedia Library</title>
        <meta http-equiv="Content-Type" content="text/html;charset=UTF-8" />
        <link href="doxygen.css" rel="stylesheet" type="text/css" />
        <link href="tabs.css" rel="stylesheet" type="text/css" />
    </head>
    <body>
        <div id="logo">
            <img src="./logo.jpg" width="770" height="200" title="SFML home" alt="SFML logo" />
        </div>
<!-- Generated by Doxygen 1.7.6.1 -->
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.htm"><span>Main&#160;Page</span></a></li>
      <li><a href="modules.htm"><span>Modules</span></a></li>
      <li><a href="annotated.htm"><span>Classes</span></a></li>
      <li class="current"><a href="files.htm"><span>Files</span></a></li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="files.htm"><span>File&#160;List</span></a></li>
    </ul>
  </div>
</div>
<div class="header">
  <div class="headertitle">
<div class="title">Thread.hpp</div>  </div>
</div><!--header-->
<div class="contents">
<div class="fragment"><pre class="fragment"><a name="l00001"></a>00001 
<a name="l00002"></a>00002 <span class="comment">//</span>
<a name="l00003"></a>00003 <span class="comment">// SFML - Simple and Fast Multimedia Library</span>
<a name="l00004"></a>00004 <span class="comment">// Copyright (C) 2007-2012 Laurent Gomila (laurent.gom@gmail.com)</span>
<a name="l00005"></a>00005 <span class="comment">//</span>
<a name="l00006"></a>00006 <span class="comment">// This software is provided &#39;as-is&#39;, without any express or implied warranty.</span>
<a name="l00007"></a>00007 <span class="comment">// In no event will the authors be held liable for any damages arising from the use of this software.</span>
<a name="l00008"></a>00008 <span class="comment">//</span>
<a name="l00009"></a>00009 <span class="comment">// Permission is granted to anyone to use this software for any purpose,</span>
<a name="l00010"></a>00010 <span class="comment">// including commercial applications, and to alter it and redistribute it freely,</span>
<a name="l00011"></a>00011 <span class="comment">// subject to the following restrictions:</span>
<a name="l00012"></a>00012 <span class="comment">//</span>
<a name="l00013"></a>00013 <span class="comment">// 1. The origin of this software must not be misrepresented;</span>
<a name="l00014"></a>00014 <span class="comment">//    you must not claim that you wrote the original software.</span>
<a name="l00015"></a>00015 <span class="comment">//    If you use this software in a product, an acknowledgment</span>
<a name="l00016"></a>00016 <span class="comment">//    in the product documentation would be appreciated but is not required.</span>
<a name="l00017"></a>00017 <span class="comment">//</span>
<a name="l00018"></a>00018 <span class="comment">// 2. Altered source versions must be plainly marked as such,</span>
<a name="l00019"></a>00019 <span class="comment">//    and must not be misrepresented as being the original software.</span>
<a name="l00020"></a>00020 <span class="comment">//</span>
<a name="l00021"></a>00021 <span class="comment">// 3. This notice may not be removed or altered from any source distribution.</span>
<a name="l00022"></a>00022 <span class="comment">//</span>
<a name="l00024"></a>00024 <span class="comment"></span>
<a name="l00025"></a>00025 <span class="preprocessor">#ifndef SFML_THREAD_HPP</span>
<a name="l00026"></a>00026 <span class="preprocessor"></span><span class="preprocessor">#define SFML_THREAD_HPP</span>
<a name="l00027"></a>00027 <span class="preprocessor"></span>
<a name="l00029"></a>00029 <span class="comment">// Headers</span>
<a name="l00031"></a>00031 <span class="comment"></span><span class="preprocessor">#include &lt;SFML/System/Export.hpp&gt;</span>
<a name="l00032"></a>00032 <span class="preprocessor">#include &lt;SFML/System/NonCopyable.hpp&gt;</span>
<a name="l00033"></a>00033 <span class="preprocessor">#include &lt;cstdlib&gt;</span>
<a name="l00034"></a>00034 
<a name="l00035"></a>00035 
<a name="l00036"></a>00036 <span class="keyword">namespace </span>sf
<a name="l00037"></a>00037 {
<a name="l00038"></a>00038 <span class="keyword">namespace </span>priv
<a name="l00039"></a>00039 {
<a name="l00040"></a>00040     <span class="keyword">class </span>ThreadImpl;
<a name="l00041"></a>00041     <span class="keyword">struct </span>ThreadFunc;
<a name="l00042"></a>00042 }
<a name="l00043"></a>00043 
<a name="l00048"></a><a class="code" href="classsf_1_1Thread.htm">00048</a> <span class="keyword">class </span>SFML_SYSTEM_API <a class="code" href="classsf_1_1Thread.htm" title="Utility class to manipulate threads.">Thread</a> : <a class="code" href="classsf_1_1NonCopyable.htm" title="Utility class that makes any derived class non-copyable.">NonCopyable</a>
<a name="l00049"></a>00049 {
<a name="l00050"></a>00050 <span class="keyword">public</span> :
<a name="l00051"></a>00051 
<a name="l00074"></a>00074     <span class="keyword">template</span> &lt;<span class="keyword">typename</span> F&gt;
<a name="l00075"></a>00075     <a class="code" href="classsf_1_1Thread.htm" title="Utility class to manipulate threads.">Thread</a>(F <span class="keyword">function</span>);
<a name="l00076"></a>00076 
<a name="l00102"></a>00102     <span class="keyword">template</span> &lt;<span class="keyword">typename</span> F, <span class="keyword">typename</span> A&gt;
<a name="l00103"></a>00103     <a class="code" href="classsf_1_1Thread.htm" title="Utility class to manipulate threads.">Thread</a>(F <span class="keyword">function</span>, A argument);
<a name="l00104"></a>00104 
<a name="l00125"></a>00125     <span class="keyword">template</span> &lt;<span class="keyword">typename</span> C&gt;
<a name="l00126"></a>00126     <a class="code" href="classsf_1_1Thread.htm" title="Utility class to manipulate threads.">Thread</a>(<span class="keywordtype">void</span>(C::*<span class="keyword">function</span>)(), C* <span class="keywordtype">object</span>);
<a name="l00127"></a>00127 
<a name="l00135"></a>00135     ~<a class="code" href="classsf_1_1Thread.htm" title="Utility class to manipulate threads.">Thread</a>();
<a name="l00136"></a>00136 
<a name="l00146"></a>00146     <span class="keywordtype">void</span> launch();
<a name="l00147"></a>00147 
<a name="l00159"></a>00159     <span class="keywordtype">void</span> wait();
<a name="l00160"></a>00160 
<a name="l00172"></a>00172     <span class="keywordtype">void</span> terminate();
<a name="l00173"></a>00173 
<a name="l00174"></a>00174 <span class="keyword">private</span> :
<a name="l00175"></a>00175 
<a name="l00176"></a>00176     <span class="keyword">friend</span> <span class="keyword">class </span>priv::ThreadImpl;
<a name="l00177"></a>00177 
<a name="l00184"></a>00184     <span class="keywordtype">void</span> run();
<a name="l00185"></a>00185 
<a name="l00187"></a>00187     <span class="comment">// Member data</span>
<a name="l00189"></a>00189 <span class="comment"></span>    priv::ThreadImpl* m_impl;       
<a name="l00190"></a>00190     priv::ThreadFunc* m_entryPoint; 
<a name="l00191"></a>00191 };
<a name="l00192"></a>00192 
<a name="l00193"></a>00193 <span class="preprocessor">#include &lt;SFML/System/Thread.inl&gt;</span>
<a name="l00194"></a>00194 
<a name="l00195"></a>00195 } <span class="comment">// namespace sf</span>
<a name="l00196"></a>00196 
<a name="l00197"></a>00197 <span class="preprocessor">#endif // SFML_THREAD_HPP</span>
<a name="l00198"></a>00198 <span class="preprocessor"></span>
<a name="l00199"></a>00199 
</pre></div></div><!-- contents -->

        <p id="footer">
            &nbsp;::&nbsp; Copyright &copy; 2007-2008 Laurent Gomila, all rights reserved &nbsp;::&nbsp;
            Documentation generated by <a href="http://www.doxygen.org/" title="doxygen website">doxygen 1.5.2</a> &nbsp;::&nbsp;
        </p>

    </body>
</html>
