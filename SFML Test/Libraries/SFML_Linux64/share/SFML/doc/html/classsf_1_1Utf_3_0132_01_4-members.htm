<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<html>
    <head>
        <title>SFML - Simple and Fast Multimedia Library</title>
        <meta http-equiv="Content-Type" content="text/html;charset=UTF-8" />
        <link href="doxygen.css" rel="stylesheet" type="text/css" />
        <link href="tabs.css" rel="stylesheet" type="text/css" />
    </head>
    <body>
        <div id="logo">
            <img src="./logo.jpg" width="770" height="200" title="SFML home" alt="SFML logo" />
        </div>
<!-- Generated by Doxygen 1.7.6.1 -->
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.htm"><span>Main&#160;Page</span></a></li>
      <li><a href="modules.htm"><span>Modules</span></a></li>
      <li class="current"><a href="annotated.htm"><span>Classes</span></a></li>
      <li><a href="files.htm"><span>Files</span></a></li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="annotated.htm"><span>Class&#160;List</span></a></li>
      <li><a href="classes.htm"><span>Class&#160;Index</span></a></li>
      <li><a href="hierarchy.htm"><span>Class&#160;Hierarchy</span></a></li>
      <li><a href="functions.htm"><span>Class&#160;Members</span></a></li>
    </ul>
  </div>
  <div id="nav-path" class="navpath">
    <ul>
      <li class="navelem"><b>sf</b>      </li>
      <li class="navelem"><a class="el" href="classsf_1_1Utf_3_0132_01_4.htm">Utf&lt; 32 &gt;</a>      </li>
    </ul>
  </div>
</div>
<div class="header">
  <div class="headertitle">
<div class="title">sf::Utf&lt; 32 &gt; Member List</div>  </div>
</div><!--header-->
<div class="contents">
This is the complete list of members for <a class="el" href="classsf_1_1Utf_3_0132_01_4.htm">sf::Utf&lt; 32 &gt;</a>, including all inherited members.<table>
  <tr class="memlist"><td><a class="el" href="classsf_1_1Utf_3_0132_01_4.htm#a9b18c32b9e6d4b3126e9b4af45988b55">count</a>(In begin, In end)</td><td><a class="el" href="classsf_1_1Utf_3_0132_01_4.htm">sf::Utf&lt; 32 &gt;</a></td><td><code> [static]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classsf_1_1Utf_3_0132_01_4.htm#ad754ce8476f7b80563890dec12cefd46">decode</a>(In begin, In end, Uint32 &amp;output, Uint32 replacement=0)</td><td><a class="el" href="classsf_1_1Utf_3_0132_01_4.htm">sf::Utf&lt; 32 &gt;</a></td><td><code> [static]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classsf_1_1Utf_3_0132_01_4.htm#a68346ea833f88267a7c739d4d96fb86f">decodeAnsi</a>(In input, const std::locale &amp;locale=std::locale())</td><td><a class="el" href="classsf_1_1Utf_3_0132_01_4.htm">sf::Utf&lt; 32 &gt;</a></td><td><code> [static]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classsf_1_1Utf_3_0132_01_4.htm#a043fe25f5f4dbc205e78e6f1d99840dc">decodeWide</a>(In input)</td><td><a class="el" href="classsf_1_1Utf_3_0132_01_4.htm">sf::Utf&lt; 32 &gt;</a></td><td><code> [static]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classsf_1_1Utf_3_0132_01_4.htm#a27b9d3f3fc49a8c88d91966889fcfca1">encode</a>(Uint32 input, Out output, Uint32 replacement=0)</td><td><a class="el" href="classsf_1_1Utf_3_0132_01_4.htm">sf::Utf&lt; 32 &gt;</a></td><td><code> [static]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classsf_1_1Utf_3_0132_01_4.htm#af6590226a071076ca22d818573a16ded">encodeAnsi</a>(Uint32 codepoint, Out output, char replacement=0, const std::locale &amp;locale=std::locale())</td><td><a class="el" href="classsf_1_1Utf_3_0132_01_4.htm">sf::Utf&lt; 32 &gt;</a></td><td><code> [static]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classsf_1_1Utf_3_0132_01_4.htm#a52e511e74ddc5df1bbf18f910193bc47">encodeWide</a>(Uint32 codepoint, Out output, wchar_t replacement=0)</td><td><a class="el" href="classsf_1_1Utf_3_0132_01_4.htm">sf::Utf&lt; 32 &gt;</a></td><td><code> [static]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classsf_1_1Utf_3_0132_01_4.htm#a384a4169287af15876783ad477cac4e3">fromAnsi</a>(In begin, In end, Out output, const std::locale &amp;locale=std::locale())</td><td><a class="el" href="classsf_1_1Utf_3_0132_01_4.htm">sf::Utf&lt; 32 &gt;</a></td><td><code> [static]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classsf_1_1Utf_3_0132_01_4.htm#a05741b76b5a26267a72735e40ca61c55">fromLatin1</a>(In begin, In end, Out output)</td><td><a class="el" href="classsf_1_1Utf_3_0132_01_4.htm">sf::Utf&lt; 32 &gt;</a></td><td><code> [static]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classsf_1_1Utf_3_0132_01_4.htm#abdf0d41e0c8814a68326688e3b8d187f">fromWide</a>(In begin, In end, Out output)</td><td><a class="el" href="classsf_1_1Utf_3_0132_01_4.htm">sf::Utf&lt; 32 &gt;</a></td><td><code> [static]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classsf_1_1Utf_3_0132_01_4.htm#a788b4ebc728dde2aaba38f3605d4867c">next</a>(In begin, In end)</td><td><a class="el" href="classsf_1_1Utf_3_0132_01_4.htm">sf::Utf&lt; 32 &gt;</a></td><td><code> [static]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classsf_1_1Utf_3_0132_01_4.htm#a768cb205f7f1d20cd900e34fb48f9316">toAnsi</a>(In begin, In end, Out output, char replacement=0, const std::locale &amp;locale=std::locale())</td><td><a class="el" href="classsf_1_1Utf_3_0132_01_4.htm">sf::Utf&lt; 32 &gt;</a></td><td><code> [static]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classsf_1_1Utf_3_0132_01_4.htm#a064ce0ad81768d0d99b6b3e2e980e3ce">toLatin1</a>(In begin, In end, Out output, char replacement=0)</td><td><a class="el" href="classsf_1_1Utf_3_0132_01_4.htm">sf::Utf&lt; 32 &gt;</a></td><td><code> [static]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classsf_1_1Utf_3_0132_01_4.htm#a3f97efb599ad237af06f076f3fcfa354">toUtf16</a>(In begin, In end, Out output)</td><td><a class="el" href="classsf_1_1Utf_3_0132_01_4.htm">sf::Utf&lt; 32 &gt;</a></td><td><code> [static]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classsf_1_1Utf_3_0132_01_4.htm#abd7c1e80791c80c4d78257440de96140">toUtf32</a>(In begin, In end, Out output)</td><td><a class="el" href="classsf_1_1Utf_3_0132_01_4.htm">sf::Utf&lt; 32 &gt;</a></td><td><code> [static]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classsf_1_1Utf_3_0132_01_4.htm#a193e155964b073c8ba838434f41d5e97">toUtf8</a>(In begin, In end, Out output)</td><td><a class="el" href="classsf_1_1Utf_3_0132_01_4.htm">sf::Utf&lt; 32 &gt;</a></td><td><code> [static]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classsf_1_1Utf_3_0132_01_4.htm#a0d5bf45a9732beb935592da6bed1242c">toWide</a>(In begin, In end, Out output, wchar_t replacement=0)</td><td><a class="el" href="classsf_1_1Utf_3_0132_01_4.htm">sf::Utf&lt; 32 &gt;</a></td><td><code> [static]</code></td></tr>
</table></div><!-- contents -->

        <p id="footer">
            &nbsp;::&nbsp; Copyright &copy; 2007-2008 Laurent Gomila, all rights reserved &nbsp;::&nbsp;
            Documentation generated by <a href="http://www.doxygen.org/" title="doxygen website">doxygen 1.5.2</a> &nbsp;::&nbsp;
        </p>

    </body>
</html>
