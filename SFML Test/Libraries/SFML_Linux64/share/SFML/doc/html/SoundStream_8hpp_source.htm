<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<html>
    <head>
        <title>SFML - Simple and Fast Multimedia Library</title>
        <meta http-equiv="Content-Type" content="text/html;charset=UTF-8" />
        <link href="doxygen.css" rel="stylesheet" type="text/css" />
        <link href="tabs.css" rel="stylesheet" type="text/css" />
    </head>
    <body>
        <div id="logo">
            <img src="./logo.jpg" width="770" height="200" title="SFML home" alt="SFML logo" />
        </div>
<!-- Generated by Doxygen 1.7.6.1 -->
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.htm"><span>Main&#160;Page</span></a></li>
      <li><a href="modules.htm"><span>Modules</span></a></li>
      <li><a href="annotated.htm"><span>Classes</span></a></li>
      <li class="current"><a href="files.htm"><span>Files</span></a></li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="files.htm"><span>File&#160;List</span></a></li>
    </ul>
  </div>
</div>
<div class="header">
  <div class="headertitle">
<div class="title">SoundStream.hpp</div>  </div>
</div><!--header-->
<div class="contents">
<div class="fragment"><pre class="fragment"><a name="l00001"></a>00001 
<a name="l00002"></a>00002 <span class="comment">//</span>
<a name="l00003"></a>00003 <span class="comment">// SFML - Simple and Fast Multimedia Library</span>
<a name="l00004"></a>00004 <span class="comment">// Copyright (C) 2007-2012 Laurent Gomila (laurent.gom@gmail.com)</span>
<a name="l00005"></a>00005 <span class="comment">//</span>
<a name="l00006"></a>00006 <span class="comment">// This software is provided &#39;as-is&#39;, without any express or implied warranty.</span>
<a name="l00007"></a>00007 <span class="comment">// In no event will the authors be held liable for any damages arising from the use of this software.</span>
<a name="l00008"></a>00008 <span class="comment">//</span>
<a name="l00009"></a>00009 <span class="comment">// Permission is granted to anyone to use this software for any purpose,</span>
<a name="l00010"></a>00010 <span class="comment">// including commercial applications, and to alter it and redistribute it freely,</span>
<a name="l00011"></a>00011 <span class="comment">// subject to the following restrictions:</span>
<a name="l00012"></a>00012 <span class="comment">//</span>
<a name="l00013"></a>00013 <span class="comment">// 1. The origin of this software must not be misrepresented;</span>
<a name="l00014"></a>00014 <span class="comment">//    you must not claim that you wrote the original software.</span>
<a name="l00015"></a>00015 <span class="comment">//    If you use this software in a product, an acknowledgment</span>
<a name="l00016"></a>00016 <span class="comment">//    in the product documentation would be appreciated but is not required.</span>
<a name="l00017"></a>00017 <span class="comment">//</span>
<a name="l00018"></a>00018 <span class="comment">// 2. Altered source versions must be plainly marked as such,</span>
<a name="l00019"></a>00019 <span class="comment">//    and must not be misrepresented as being the original software.</span>
<a name="l00020"></a>00020 <span class="comment">//</span>
<a name="l00021"></a>00021 <span class="comment">// 3. This notice may not be removed or altered from any source distribution.</span>
<a name="l00022"></a>00022 <span class="comment">//</span>
<a name="l00024"></a>00024 <span class="comment"></span>
<a name="l00025"></a>00025 <span class="preprocessor">#ifndef SFML_SOUNDSTREAM_HPP</span>
<a name="l00026"></a>00026 <span class="preprocessor"></span><span class="preprocessor">#define SFML_SOUNDSTREAM_HPP</span>
<a name="l00027"></a>00027 <span class="preprocessor"></span>
<a name="l00029"></a>00029 <span class="comment">// Headers</span>
<a name="l00031"></a>00031 <span class="comment"></span><span class="preprocessor">#include &lt;SFML/Audio/Export.hpp&gt;</span>
<a name="l00032"></a>00032 <span class="preprocessor">#include &lt;SFML/Audio/SoundSource.hpp&gt;</span>
<a name="l00033"></a>00033 <span class="preprocessor">#include &lt;SFML/System/Thread.hpp&gt;</span>
<a name="l00034"></a>00034 <span class="preprocessor">#include &lt;SFML/System/Time.hpp&gt;</span>
<a name="l00035"></a>00035 <span class="preprocessor">#include &lt;cstdlib&gt;</span>
<a name="l00036"></a>00036 
<a name="l00037"></a>00037 
<a name="l00038"></a>00038 <span class="keyword">namespace </span>sf
<a name="l00039"></a>00039 {
<a name="l00044"></a><a class="code" href="classsf_1_1SoundStream.htm">00044</a> <span class="keyword">class </span>SFML_AUDIO_API <a class="code" href="classsf_1_1SoundStream.htm" title="Abstract base class for streamed audio sources.">SoundStream</a> : <span class="keyword">public</span> <a class="code" href="classsf_1_1SoundSource.htm" title="Base class defining a sound&#39;s properties.">SoundSource</a>
<a name="l00045"></a>00045 {
<a name="l00046"></a>00046 <span class="keyword">public</span> :
<a name="l00047"></a>00047 
<a name="l00052"></a><a class="code" href="structsf_1_1SoundStream_1_1Chunk.htm">00052</a>     <span class="keyword">struct </span><a class="code" href="structsf_1_1SoundStream_1_1Chunk.htm" title="Structure defining a chunk of audio data to stream.">Chunk</a>
<a name="l00053"></a>00053     {
<a name="l00054"></a><a class="code" href="structsf_1_1SoundStream_1_1Chunk.htm#aa3b84d69adbe663a17a7671626076df4">00054</a>         <span class="keyword">const</span> Int16* <a class="code" href="structsf_1_1SoundStream_1_1Chunk.htm#aa3b84d69adbe663a17a7671626076df4" title="Pointer to the audio samples.">samples</a>;     
<a name="l00055"></a><a class="code" href="structsf_1_1SoundStream_1_1Chunk.htm#af47f5d94012acf8b11f056ba77aff97a">00055</a>         std::size_t  <a class="code" href="structsf_1_1SoundStream_1_1Chunk.htm#af47f5d94012acf8b11f056ba77aff97a" title="Number of samples pointed by Samples.">sampleCount</a>; 
<a name="l00056"></a>00056     };
<a name="l00057"></a>00057 
<a name="l00062"></a>00062     <span class="keyword">virtual</span> ~<a class="code" href="classsf_1_1SoundStream.htm" title="Abstract base class for streamed audio sources.">SoundStream</a>();
<a name="l00063"></a>00063 
<a name="l00076"></a>00076     <span class="keywordtype">void</span> play();
<a name="l00077"></a>00077 
<a name="l00087"></a>00087     <span class="keywordtype">void</span> pause();
<a name="l00088"></a>00088 
<a name="l00099"></a>00099     <span class="keywordtype">void</span> stop();
<a name="l00100"></a>00100 
<a name="l00109"></a>00109     <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> getChannelCount() <span class="keyword">const</span>;
<a name="l00110"></a>00110 
<a name="l00120"></a>00120     <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> getSampleRate() <span class="keyword">const</span>;
<a name="l00121"></a>00121 
<a name="l00128"></a>00128     <a class="code" href="classsf_1_1SoundSource.htm#ac43af72c98c077500b239bc75b812f03" title="Enumeration of the sound source states.">Status</a> getStatus() <span class="keyword">const</span>;
<a name="l00129"></a>00129 
<a name="l00141"></a>00141     <span class="keywordtype">void</span> setPlayingOffset(<a class="code" href="classsf_1_1Time.htm" title="Represents a time value.">Time</a> timeOffset);
<a name="l00142"></a>00142 
<a name="l00151"></a>00151     <a class="code" href="classsf_1_1Time.htm" title="Represents a time value.">Time</a> getPlayingOffset() <span class="keyword">const</span>;
<a name="l00152"></a>00152 
<a name="l00166"></a>00166     <span class="keywordtype">void</span> setLoop(<span class="keywordtype">bool</span> loop);
<a name="l00167"></a>00167 
<a name="l00176"></a>00176     <span class="keywordtype">bool</span> getLoop() <span class="keyword">const</span>;
<a name="l00177"></a>00177 
<a name="l00178"></a>00178 <span class="keyword">protected</span> :
<a name="l00179"></a>00179 
<a name="l00186"></a>00186     <a class="code" href="classsf_1_1SoundStream.htm" title="Abstract base class for streamed audio sources.">SoundStream</a>();
<a name="l00187"></a>00187 
<a name="l00202"></a>00202     <span class="keywordtype">void</span> initialize(<span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> channelCount, <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> sampleRate);
<a name="l00203"></a>00203 
<a name="l00218"></a>00218     <span class="keyword">virtual</span> <span class="keywordtype">bool</span> onGetData(<a class="code" href="structsf_1_1SoundStream_1_1Chunk.htm" title="Structure defining a chunk of audio data to stream.">Chunk</a>&amp; data) = 0;
<a name="l00219"></a>00219 
<a name="l00229"></a>00229     <span class="keyword">virtual</span> <span class="keywordtype">void</span> onSeek(<a class="code" href="classsf_1_1Time.htm" title="Represents a time value.">Time</a> timeOffset) = 0;
<a name="l00230"></a>00230 
<a name="l00231"></a>00231 <span class="keyword">private</span> :
<a name="l00232"></a>00232 
<a name="l00240"></a>00240     <span class="keywordtype">void</span> streamData();
<a name="l00241"></a>00241 
<a name="l00255"></a>00255     <span class="keywordtype">bool</span> fillAndPushBuffer(<span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> bufferNum);
<a name="l00256"></a>00256 
<a name="l00266"></a>00266     <span class="keywordtype">bool</span> fillQueue();
<a name="l00267"></a>00267 
<a name="l00274"></a>00274     <span class="keywordtype">void</span> clearQueue();
<a name="l00275"></a>00275 
<a name="l00276"></a>00276     <span class="keyword">enum</span>
<a name="l00277"></a>00277     {
<a name="l00278"></a>00278         BufferCount = 3 
<a name="l00279"></a>00279     };
<a name="l00280"></a>00280 
<a name="l00282"></a>00282     <span class="comment">// Member data</span>
<a name="l00284"></a>00284 <span class="comment"></span>    <a class="code" href="classsf_1_1Thread.htm" title="Utility class to manipulate threads.">Thread</a>        m_thread;                  
<a name="l00285"></a>00285     <span class="keywordtype">bool</span>          m_isStreaming;             
<a name="l00286"></a>00286     <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span>  m_buffers[BufferCount];    
<a name="l00287"></a>00287     <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span>  m_channelCount;            
<a name="l00288"></a>00288     <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span>  m_sampleRate;              
<a name="l00289"></a>00289     Uint32        m_format;                  
<a name="l00290"></a>00290     <span class="keywordtype">bool</span>          m_loop;                    
<a name="l00291"></a>00291     Uint64        m_samplesProcessed;        
<a name="l00292"></a>00292     <span class="keywordtype">bool</span>          m_endBuffers[BufferCount]; 
<a name="l00293"></a>00293 };
<a name="l00294"></a>00294 
<a name="l00295"></a>00295 } <span class="comment">// namespace sf</span>
<a name="l00296"></a>00296 
<a name="l00297"></a>00297 
<a name="l00298"></a>00298 <span class="preprocessor">#endif // SFML_SOUNDSTREAM_HPP</span>
<a name="l00299"></a>00299 <span class="preprocessor"></span>
<a name="l00300"></a>00300 
</pre></div></div><!-- contents -->

        <p id="footer">
            &nbsp;::&nbsp; Copyright &copy; 2007-2008 Laurent Gomila, all rights reserved &nbsp;::&nbsp;
            Documentation generated by <a href="http://www.doxygen.org/" title="doxygen website">doxygen 1.5.2</a> &nbsp;::&nbsp;
        </p>

    </body>
</html>
