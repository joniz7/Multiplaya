<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<html>
    <head>
        <title>SFML - Simple and Fast Multimedia Library</title>
        <meta http-equiv="Content-Type" content="text/html;charset=UTF-8" />
        <link href="doxygen.css" rel="stylesheet" type="text/css" />
        <link href="tabs.css" rel="stylesheet" type="text/css" />
    </head>
    <body>
        <div id="logo">
            <img src="./logo.jpg" width="770" height="200" title="SFML home" alt="SFML logo" />
        </div>
<!-- Generated by Doxygen 1.7.6.1 -->
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.htm"><span>Main&#160;Page</span></a></li>
      <li><a href="modules.htm"><span>Modules</span></a></li>
      <li><a href="annotated.htm"><span>Classes</span></a></li>
      <li class="current"><a href="files.htm"><span>Files</span></a></li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="files.htm"><span>File&#160;List</span></a></li>
    </ul>
  </div>
</div>
<div class="header">
  <div class="headertitle">
<div class="title">Rect.hpp</div>  </div>
</div><!--header-->
<div class="contents">
<div class="fragment"><pre class="fragment"><a name="l00001"></a>00001 
<a name="l00002"></a>00002 <span class="comment">//</span>
<a name="l00003"></a>00003 <span class="comment">// SFML - Simple and Fast Multimedia Library</span>
<a name="l00004"></a>00004 <span class="comment">// Copyright (C) 2007-2012 Laurent Gomila (laurent.gom@gmail.com)</span>
<a name="l00005"></a>00005 <span class="comment">//</span>
<a name="l00006"></a>00006 <span class="comment">// This software is provided &#39;as-is&#39;, without any express or implied warranty.</span>
<a name="l00007"></a>00007 <span class="comment">// In no event will the authors be held liable for any damages arising from the use of this software.</span>
<a name="l00008"></a>00008 <span class="comment">//</span>
<a name="l00009"></a>00009 <span class="comment">// Permission is granted to anyone to use this software for any purpose,</span>
<a name="l00010"></a>00010 <span class="comment">// including commercial applications, and to alter it and redistribute it freely,</span>
<a name="l00011"></a>00011 <span class="comment">// subject to the following restrictions:</span>
<a name="l00012"></a>00012 <span class="comment">//</span>
<a name="l00013"></a>00013 <span class="comment">// 1. The origin of this software must not be misrepresented;</span>
<a name="l00014"></a>00014 <span class="comment">//    you must not claim that you wrote the original software.</span>
<a name="l00015"></a>00015 <span class="comment">//    If you use this software in a product, an acknowledgment</span>
<a name="l00016"></a>00016 <span class="comment">//    in the product documentation would be appreciated but is not required.</span>
<a name="l00017"></a>00017 <span class="comment">//</span>
<a name="l00018"></a>00018 <span class="comment">// 2. Altered source versions must be plainly marked as such,</span>
<a name="l00019"></a>00019 <span class="comment">//    and must not be misrepresented as being the original software.</span>
<a name="l00020"></a>00020 <span class="comment">//</span>
<a name="l00021"></a>00021 <span class="comment">// 3. This notice may not be removed or altered from any source distribution.</span>
<a name="l00022"></a>00022 <span class="comment">//</span>
<a name="l00024"></a>00024 <span class="comment"></span>
<a name="l00025"></a>00025 <span class="preprocessor">#ifndef SFML_RECT_HPP</span>
<a name="l00026"></a>00026 <span class="preprocessor"></span><span class="preprocessor">#define SFML_RECT_HPP</span>
<a name="l00027"></a>00027 <span class="preprocessor"></span>
<a name="l00029"></a>00029 <span class="comment">// Headers</span>
<a name="l00031"></a>00031 <span class="comment"></span><span class="preprocessor">#include &lt;SFML/System/Vector2.hpp&gt;</span>
<a name="l00032"></a>00032 <span class="preprocessor">#include &lt;algorithm&gt;</span>
<a name="l00033"></a>00033 
<a name="l00034"></a>00034 
<a name="l00035"></a>00035 <span class="keyword">namespace </span>sf
<a name="l00036"></a>00036 {
<a name="l00041"></a>00041 <span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;
<a name="l00042"></a><a class="code" href="classsf_1_1Rect.htm">00042</a> <span class="keyword">class </span><a class="code" href="classsf_1_1Rect.htm" title="Utility class for manipulating 2D axis aligned rectangles.">Rect</a>
<a name="l00043"></a>00043 {
<a name="l00044"></a>00044 <span class="keyword">public</span> :
<a name="l00045"></a>00045 
<a name="l00053"></a>00053     <a class="code" href="classsf_1_1Rect.htm#a0f87ebaef9722a6222fd2e04ce8efb37" title="Default constructor.">Rect</a>();
<a name="l00054"></a>00054 
<a name="l00067"></a>00067     <a class="code" href="classsf_1_1Rect.htm#a0f87ebaef9722a6222fd2e04ce8efb37" title="Default constructor.">Rect</a>(T rectLeft, T rectTop, T rectWidth, T rectHeight);
<a name="l00068"></a>00068 
<a name="l00079"></a>00079     <a class="code" href="classsf_1_1Rect.htm#a0f87ebaef9722a6222fd2e04ce8efb37" title="Default constructor.">Rect</a>(<span class="keyword">const</span> <a class="code" href="classsf_1_1Vector2.htm" title="Utility template class for manipulating 2-dimensional vectors.">Vector2&lt;T&gt;</a>&amp; position, <span class="keyword">const</span> <a class="code" href="classsf_1_1Vector2.htm" title="Utility template class for manipulating 2-dimensional vectors.">Vector2&lt;T&gt;</a>&amp; size);
<a name="l00080"></a>00080 
<a name="l00092"></a>00092     <span class="keyword">template</span> &lt;<span class="keyword">typename</span> U&gt;
<a name="l00093"></a>00093     <span class="keyword">explicit</span> <a class="code" href="classsf_1_1Rect.htm#a0f87ebaef9722a6222fd2e04ce8efb37" title="Default constructor.">Rect</a>(<span class="keyword">const</span> <a class="code" href="classsf_1_1Rect.htm" title="Utility class for manipulating 2D axis aligned rectangles.">Rect&lt;U&gt;</a>&amp; rectangle);
<a name="l00094"></a>00094 
<a name="l00106"></a>00106     <span class="keywordtype">bool</span> <a class="code" href="classsf_1_1Rect.htm#aa8a5364c84de6dd5299f833b54e31ef1" title="Check if a point is inside the rectangle&#39;s area.">contains</a>(T x, T y) <span class="keyword">const</span>;
<a name="l00107"></a>00107 
<a name="l00118"></a>00118     <span class="keywordtype">bool</span> <a class="code" href="classsf_1_1Rect.htm#aa8a5364c84de6dd5299f833b54e31ef1" title="Check if a point is inside the rectangle&#39;s area.">contains</a>(<span class="keyword">const</span> <a class="code" href="classsf_1_1Vector2.htm" title="Utility template class for manipulating 2-dimensional vectors.">Vector2&lt;T&gt;</a>&amp; point) <span class="keyword">const</span>;
<a name="l00119"></a>00119 
<a name="l00130"></a>00130     <span class="keywordtype">bool</span> <a class="code" href="classsf_1_1Rect.htm#a566740c8f58e01bb052266f47e7e1011" title="Check the intersection between two rectangles.">intersects</a>(<span class="keyword">const</span> <a class="code" href="classsf_1_1Rect.htm" title="Utility class for manipulating 2D axis aligned rectangles.">Rect&lt;T&gt;</a>&amp; rectangle) <span class="keyword">const</span>;
<a name="l00131"></a>00131 
<a name="l00146"></a>00146     <span class="keywordtype">bool</span> <a class="code" href="classsf_1_1Rect.htm#a566740c8f58e01bb052266f47e7e1011" title="Check the intersection between two rectangles.">intersects</a>(<span class="keyword">const</span> <a class="code" href="classsf_1_1Rect.htm" title="Utility class for manipulating 2D axis aligned rectangles.">Rect&lt;T&gt;</a>&amp; rectangle, <a class="code" href="classsf_1_1Rect.htm" title="Utility class for manipulating 2D axis aligned rectangles.">Rect&lt;T&gt;</a>&amp; intersection) <span class="keyword">const</span>;
<a name="l00147"></a>00147 
<a name="l00149"></a>00149     <span class="comment">// Member data</span>
<a name="l00151"></a><a class="code" href="classsf_1_1Rect.htm#aa49960fa465103d9cb7069ceb25c7c32">00151</a> <span class="comment"></span>    T <a class="code" href="classsf_1_1Rect.htm#aa49960fa465103d9cb7069ceb25c7c32" title="Left coordinate of the rectangle.">left</a>;   
<a name="l00152"></a><a class="code" href="classsf_1_1Rect.htm#abd3d3a2d0ad211ef0082bd0aa1a5c0e3">00152</a>     T <a class="code" href="classsf_1_1Rect.htm#abd3d3a2d0ad211ef0082bd0aa1a5c0e3" title="Top coordinate of the rectangle.">top</a>;    
<a name="l00153"></a><a class="code" href="classsf_1_1Rect.htm#a4dd5b9d4333bebbc51bd309298fd500f">00153</a>     T <a class="code" href="classsf_1_1Rect.htm#a4dd5b9d4333bebbc51bd309298fd500f" title="Width of the rectangle.">width</a>;  
<a name="l00154"></a><a class="code" href="classsf_1_1Rect.htm#a6fa0fc7de1636d78cae1a1b54eef95cd">00154</a>     T <a class="code" href="classsf_1_1Rect.htm#a6fa0fc7de1636d78cae1a1b54eef95cd" title="Height of the rectangle.">height</a>; 
<a name="l00155"></a>00155 };
<a name="l00156"></a>00156 
<a name="l00169"></a>00169 <span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;
<a name="l00170"></a>00170 <span class="keywordtype">bool</span> operator ==(<span class="keyword">const</span> <a class="code" href="classsf_1_1Rect.htm" title="Utility class for manipulating 2D axis aligned rectangles.">Rect&lt;T&gt;</a>&amp; left, <span class="keyword">const</span> <a class="code" href="classsf_1_1Rect.htm" title="Utility class for manipulating 2D axis aligned rectangles.">Rect&lt;T&gt;</a>&amp; right);
<a name="l00171"></a>00171 
<a name="l00184"></a>00184 <span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;
<a name="l00185"></a>00185 <span class="keywordtype">bool</span> operator !=(<span class="keyword">const</span> <a class="code" href="classsf_1_1Rect.htm" title="Utility class for manipulating 2D axis aligned rectangles.">Rect&lt;T&gt;</a>&amp; left, <span class="keyword">const</span> <a class="code" href="classsf_1_1Rect.htm" title="Utility class for manipulating 2D axis aligned rectangles.">Rect&lt;T&gt;</a>&amp; right);
<a name="l00186"></a>00186 
<a name="l00187"></a>00187 <span class="preprocessor">#include &lt;SFML/Graphics/Rect.inl&gt;</span>
<a name="l00188"></a>00188 
<a name="l00189"></a>00189 <span class="comment">// Create typedefs for the most common types</span>
<a name="l00190"></a>00190 <span class="keyword">typedef</span> <a class="code" href="classsf_1_1Rect.htm">Rect&lt;int&gt;</a>   <a class="code" href="classsf_1_1Rect.htm">IntRect</a>;
<a name="l00191"></a>00191 <span class="keyword">typedef</span> <a class="code" href="classsf_1_1Rect.htm">Rect&lt;float&gt;</a> <a class="code" href="classsf_1_1Rect.htm">FloatRect</a>;
<a name="l00192"></a>00192 
<a name="l00193"></a>00193 } <span class="comment">// namespace sf</span>
<a name="l00194"></a>00194 
<a name="l00195"></a>00195 
<a name="l00196"></a>00196 <span class="preprocessor">#endif // SFML_RECT_HPP</span>
<a name="l00197"></a>00197 <span class="preprocessor"></span>
<a name="l00198"></a>00198 
</pre></div></div><!-- contents -->

        <p id="footer">
            &nbsp;::&nbsp; Copyright &copy; 2007-2008 Laurent Gomila, all rights reserved &nbsp;::&nbsp;
            Documentation generated by <a href="http://www.doxygen.org/" title="doxygen website">doxygen 1.5.2</a> &nbsp;::&nbsp;
        </p>

    </body>
</html>
