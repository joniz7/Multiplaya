<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<html>
    <head>
        <title>SFML - Simple and Fast Multimedia Library</title>
        <meta http-equiv="Content-Type" content="text/html;charset=UTF-8" />
        <link href="doxygen.css" rel="stylesheet" type="text/css" />
        <link href="tabs.css" rel="stylesheet" type="text/css" />
    </head>
    <body>
        <div id="logo">
            <img src="./logo.jpg" width="770" height="200" title="SFML home" alt="SFML logo" />
        </div>
<!-- Generated by Doxygen 1.7.6.1 -->
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.htm"><span>Main&#160;Page</span></a></li>
      <li><a href="modules.htm"><span>Modules</span></a></li>
      <li class="current"><a href="annotated.htm"><span>Classes</span></a></li>
      <li><a href="files.htm"><span>Files</span></a></li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="annotated.htm"><span>Class&#160;List</span></a></li>
      <li><a href="classes.htm"><span>Class&#160;Index</span></a></li>
      <li><a href="hierarchy.htm"><span>Class&#160;Hierarchy</span></a></li>
      <li><a href="functions.htm"><span>Class&#160;Members</span></a></li>
    </ul>
  </div>
  <div id="nav-path" class="navpath">
    <ul>
      <li class="navelem"><b>sf</b>      </li>
      <li class="navelem"><a class="el" href="classsf_1_1InputStream.htm">InputStream</a>      </li>
    </ul>
  </div>
</div>
<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a>  </div>
  <div class="headertitle">
<div class="title">sf::InputStream Class Reference<div class="ingroups"><a class="el" href="group__system.htm">System module</a></div></div>  </div>
</div><!--header-->
<div class="contents">
<!-- doxytag: class="sf::InputStream" -->
<p>Abstract class for custom file input streams.  
 <a href="classsf_1_1InputStream.htm#details">More...</a></p>

<p><code>#include &lt;<a class="el" href="InputStream_8hpp_source.htm">InputStream.hpp</a>&gt;</code></p>

<p><a href="classsf_1_1InputStream-members.htm">List of all members.</a></p>
<table class="memberdecls">
<tr><td colspan="2"><h2><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">virtual&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsf_1_1InputStream.htm#a4b2eb0f92323e630bd0542bc6191682e">~InputStream</a> ()</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Virtual destructor.  <a href="#a4b2eb0f92323e630bd0542bc6191682e"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">virtual Int64&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsf_1_1InputStream.htm#a8dd89c74c1acb693203f50e750c6ae53">read</a> (void *data, Int64 size)=0</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Read data from the stream.  <a href="#a8dd89c74c1acb693203f50e750c6ae53"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">virtual Int64&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsf_1_1InputStream.htm#a76aba8e5d5cf9b1c5902d5e04f7864fc">seek</a> (Int64 position)=0</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Change the current reading position.  <a href="#a76aba8e5d5cf9b1c5902d5e04f7864fc"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">virtual Int64&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsf_1_1InputStream.htm#a599515b9ccdbddb6fef5a98424fd559c">tell</a> ()=0</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Get the current reading position in the stream.  <a href="#a599515b9ccdbddb6fef5a98424fd559c"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">virtual Int64&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsf_1_1InputStream.htm#a311eaaaa65d636728e5153b574b72d5d">getSize</a> ()=0</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Return the size of the stream.  <a href="#a311eaaaa65d636728e5153b574b72d5d"></a><br/></td></tr>
</table>
<hr/><a name="details" id="details"></a><h2>Detailed Description</h2>
<div class="textblock"><p>Abstract class for custom file input streams. </p>
<p>This class allows users to define their own file input sources from which SFML can load resources.</p>
<p>SFML resource classes like <a class="el" href="classsf_1_1Texture.htm" title="Image living on the graphics card that can be used for drawing.">sf::Texture</a> and <a class="el" href="classsf_1_1SoundBuffer.htm" title="Storage for audio samples defining a sound.">sf::SoundBuffer</a> provide loadFromFile and loadFromMemory functions, which read data from conventional sources. However, if you have data coming from a different source (over a network, embedded, encrypted, compressed, etc) you can derive your own class from <a class="el" href="classsf_1_1InputStream.htm" title="Abstract class for custom file input streams.">sf::InputStream</a> and load SFML resources with their loadFromStream function.</p>
<p>Usage example: </p>
<div class="fragment"><pre class="fragment"> <span class="comment">// custom stream class that reads from inside a zip file</span>
 <span class="keyword">class </span>ZipStream : <span class="keyword">public</span> sf::InputStream
 {
 <span class="keyword">public</span> :
 
     ZipStream(std::string archive);

     <span class="keywordtype">bool</span> open(std::string filename);

     Int64 <a class="code" href="classsf_1_1InputStream.htm#a8dd89c74c1acb693203f50e750c6ae53" title="Read data from the stream.">read</a>(<span class="keywordtype">void</span>* data, Int64 size);
 
     Int64 <a class="code" href="classsf_1_1InputStream.htm#a76aba8e5d5cf9b1c5902d5e04f7864fc" title="Change the current reading position.">seek</a>(Int64 position);
     
     Int64 <a class="code" href="classsf_1_1InputStream.htm#a599515b9ccdbddb6fef5a98424fd559c" title="Get the current reading position in the stream.">tell</a>();
 
     Int64 <a class="code" href="classsf_1_1InputStream.htm#a311eaaaa65d636728e5153b574b72d5d" title="Return the size of the stream.">getSize</a>();

 <span class="keyword">private</span> :

     ...
 };

 <span class="comment">// now you can load textures...</span>
 <a class="code" href="classsf_1_1Texture.htm" title="Image living on the graphics card that can be used for drawing.">sf::Texture</a> texture;
 ZipStream stream(<span class="stringliteral">&quot;resources.zip&quot;</span>);
 stream.open(<span class="stringliteral">&quot;images/img.png&quot;</span>);
 texture.<a class="code" href="classsf_1_1Texture.htm#a6803a13465a7113a8964d1081841886d" title="Load the texture from a custom stream.">loadFromStream</a>(stream);

 <span class="comment">// musics...</span>
 <a class="code" href="classsf_1_1Music.htm" title="Streamed music played from an audio file.">sf::Music</a> music;
 ZipStream stream(<span class="stringliteral">&quot;resources.zip&quot;</span>);
 stream.open(<span class="stringliteral">&quot;musics/msc.ogg&quot;</span>);
 music.<a class="code" href="classsf_1_1Music.htm#a4e55d1910a26858b44778c26b237d673" title="Open a music from an audio file in a custom stream.">openFromStream</a>(stream);

 <span class="comment">// etc.</span>
</pre></div> 
<p>Definition at line <a class="el" href="InputStream_8hpp_source.htm#l00040">40</a> of file <a class="el" href="InputStream_8hpp_source.htm">InputStream.hpp</a>.</p>
</div><hr/><h2>Constructor &amp; Destructor Documentation</h2>
<a class="anchor" id="a4b2eb0f92323e630bd0542bc6191682e"></a><!-- doxytag: member="sf::InputStream::~InputStream" ref="a4b2eb0f92323e630bd0542bc6191682e" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">virtual <a class="el" href="classsf_1_1InputStream.htm#a4b2eb0f92323e630bd0542bc6191682e">sf::InputStream::~InputStream</a> </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td><code> [inline, virtual]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Virtual destructor. </p>

<p>Definition at line <a class="el" href="InputStream_8hpp_source.htm#l00048">48</a> of file <a class="el" href="InputStream_8hpp_source.htm">InputStream.hpp</a>.</p>

</div>
</div>
<hr/><h2>Member Function Documentation</h2>
<a class="anchor" id="a311eaaaa65d636728e5153b574b72d5d"></a><!-- doxytag: member="sf::InputStream::getSize" ref="a311eaaaa65d636728e5153b574b72d5d" args="()=0" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">virtual Int64 <a class="el" href="classsf_1_1InputStream.htm#a311eaaaa65d636728e5153b574b72d5d">sf::InputStream::getSize</a> </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td><code> [pure virtual]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Return the size of the stream. </p>
<dl class="return"><dt><b>Returns:</b></dt><dd>The total number of bytes available in the stream, or -1 on error </dd></dl>

</div>
</div>
<a class="anchor" id="a8dd89c74c1acb693203f50e750c6ae53"></a><!-- doxytag: member="sf::InputStream::read" ref="a8dd89c74c1acb693203f50e750c6ae53" args="(void *data, Int64 size)=0" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">virtual Int64 <a class="el" href="classsf_1_1InputStream.htm#a8dd89c74c1acb693203f50e750c6ae53">sf::InputStream::read</a> </td>
          <td>(</td>
          <td class="paramtype">void *&#160;</td>
          <td class="paramname"><em>data</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">Int64&#160;</td>
          <td class="paramname"><em>size</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td><code> [pure virtual]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Read data from the stream. </p>
<dl class="params"><dt><b>Parameters:</b></dt><dd>
  <table class="params">
    <tr><td class="paramname">data</td><td>Buffer where to copy the read data </td></tr>
    <tr><td class="paramname">size</td><td>Desired number of bytes to read</td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Returns:</b></dt><dd>The number of bytes actually read </dd></dl>

</div>
</div>
<a class="anchor" id="a76aba8e5d5cf9b1c5902d5e04f7864fc"></a><!-- doxytag: member="sf::InputStream::seek" ref="a76aba8e5d5cf9b1c5902d5e04f7864fc" args="(Int64 position)=0" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">virtual Int64 <a class="el" href="classsf_1_1InputStream.htm#a76aba8e5d5cf9b1c5902d5e04f7864fc">sf::InputStream::seek</a> </td>
          <td>(</td>
          <td class="paramtype">Int64&#160;</td>
          <td class="paramname"><em>position</em></td><td>)</td>
          <td><code> [pure virtual]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Change the current reading position. </p>
<dl class="params"><dt><b>Parameters:</b></dt><dd>
  <table class="params">
    <tr><td class="paramname">position</td><td>The position to seek to, from the beginning</td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Returns:</b></dt><dd>The position actually sought to, or -1 on error </dd></dl>

</div>
</div>
<a class="anchor" id="a599515b9ccdbddb6fef5a98424fd559c"></a><!-- doxytag: member="sf::InputStream::tell" ref="a599515b9ccdbddb6fef5a98424fd559c" args="()=0" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">virtual Int64 <a class="el" href="classsf_1_1InputStream.htm#a599515b9ccdbddb6fef5a98424fd559c">sf::InputStream::tell</a> </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td><code> [pure virtual]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Get the current reading position in the stream. </p>
<dl class="return"><dt><b>Returns:</b></dt><dd>The current position, or -1 on error. </dd></dl>

</div>
</div>
<hr/>The documentation for this class was generated from the following file:<ul>
<li><a class="el" href="InputStream_8hpp_source.htm">InputStream.hpp</a></li>
</ul>
</div><!-- contents -->

        <p id="footer">
            &nbsp;::&nbsp; Copyright &copy; 2007-2008 Laurent Gomila, all rights reserved &nbsp;::&nbsp;
            Documentation generated by <a href="http://www.doxygen.org/" title="doxygen website">doxygen 1.5.2</a> &nbsp;::&nbsp;
        </p>

    </body>
</html>
