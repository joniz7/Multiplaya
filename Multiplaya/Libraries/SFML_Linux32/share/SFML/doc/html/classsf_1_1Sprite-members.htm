<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<html>
    <head>
        <title>SFML - Simple and Fast Multimedia Library</title>
        <meta http-equiv="Content-Type" content="text/html;charset=UTF-8" />
        <link href="doxygen.css" rel="stylesheet" type="text/css" />
        <link href="tabs.css" rel="stylesheet" type="text/css" />
    </head>
    <body>
        <div id="logo">
            <img src="./logo.jpg" width="770" height="200" title="SFML home" alt="SFML logo" />
        </div>
<!-- Generated by Doxygen 1.7.6.1 -->
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.htm"><span>Main&#160;Page</span></a></li>
      <li><a href="modules.htm"><span>Modules</span></a></li>
      <li class="current"><a href="annotated.htm"><span>Classes</span></a></li>
      <li><a href="files.htm"><span>Files</span></a></li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="annotated.htm"><span>Class&#160;List</span></a></li>
      <li><a href="classes.htm"><span>Class&#160;Index</span></a></li>
      <li><a href="hierarchy.htm"><span>Class&#160;Hierarchy</span></a></li>
      <li><a href="functions.htm"><span>Class&#160;Members</span></a></li>
    </ul>
  </div>
  <div id="nav-path" class="navpath">
    <ul>
      <li class="navelem"><b>sf</b>      </li>
      <li class="navelem"><a class="el" href="classsf_1_1Sprite.htm">Sprite</a>      </li>
    </ul>
  </div>
</div>
<div class="header">
  <div class="headertitle">
<div class="title">sf::Sprite Member List</div>  </div>
</div><!--header-->
<div class="contents">
This is the complete list of members for <a class="el" href="classsf_1_1Sprite.htm">sf::Sprite</a>, including all inherited members.<table>
  <tr class="memlist"><td><a class="el" href="classsf_1_1Sprite.htm#ab05fafd4e9999608a5cae4985e7b52df">getColor</a>() const </td><td><a class="el" href="classsf_1_1Sprite.htm">sf::Sprite</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="classsf_1_1Sprite.htm#a203d2d8087bfdca2ebc3c0485cdb7409">getGlobalBounds</a>() const </td><td><a class="el" href="classsf_1_1Sprite.htm">sf::Sprite</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="classsf_1_1Transformable.htm#ab00de62b5d1efb2ee4cf2566dea98175">getInverseTransform</a>() const </td><td><a class="el" href="classsf_1_1Transformable.htm">sf::Transformable</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="classsf_1_1Sprite.htm#a69557a8369bc2e26dd2e2eb2c50f5c90">getLocalBounds</a>() const </td><td><a class="el" href="classsf_1_1Sprite.htm">sf::Sprite</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="classsf_1_1Transformable.htm#a6bddc485d22bb64449d9d2d3a99a778f">getOrigin</a>() const </td><td><a class="el" href="classsf_1_1Transformable.htm">sf::Transformable</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="classsf_1_1Transformable.htm#a6a0552d8cf155b7df25f6ceda8ee45a5">getPosition</a>() const </td><td><a class="el" href="classsf_1_1Transformable.htm">sf::Transformable</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="classsf_1_1Transformable.htm#ad783a7e9971398ec613d22455252809e">getRotation</a>() const </td><td><a class="el" href="classsf_1_1Transformable.htm">sf::Transformable</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="classsf_1_1Transformable.htm#a3ea9639abd7a430ac99afb0aaf1ea562">getScale</a>() const </td><td><a class="el" href="classsf_1_1Transformable.htm">sf::Transformable</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="classsf_1_1Sprite.htm#a2c4fbb983b29e14f9bb69a3a75feae46">getTexture</a>() const </td><td><a class="el" href="classsf_1_1Sprite.htm">sf::Sprite</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="classsf_1_1Sprite.htm#a89aa58bc39e2072c6afe7c547d27b5a0">getTextureRect</a>() const </td><td><a class="el" href="classsf_1_1Sprite.htm">sf::Sprite</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="classsf_1_1Transformable.htm#a3b48c3362e3e2c14fef7551252deb7bb">getTransform</a>() const </td><td><a class="el" href="classsf_1_1Transformable.htm">sf::Transformable</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="classsf_1_1Transformable.htm#a86b461d6a941ad390c2ad8b6a4a20391">move</a>(float offsetX, float offsetY)</td><td><a class="el" href="classsf_1_1Transformable.htm">sf::Transformable</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="classsf_1_1Transformable.htm#ab9ca691522f6ddc1a40406849b87c469">move</a>(const Vector2f &amp;offset)</td><td><a class="el" href="classsf_1_1Transformable.htm">sf::Transformable</a></td><td></td></tr>
  <tr bgcolor="#f0f0f0"><td><b>RenderTarget</b> (defined in <a class="el" href="classsf_1_1Drawable.htm">sf::Drawable</a>)</td><td><a class="el" href="classsf_1_1Drawable.htm">sf::Drawable</a></td><td><code> [friend]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classsf_1_1Transformable.htm#af8a5ffddc0d93f238fee3bf8efe1ebda">rotate</a>(float angle)</td><td><a class="el" href="classsf_1_1Transformable.htm">sf::Transformable</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="classsf_1_1Transformable.htm#a3de0c6d8957f3cf318092f3f60656391">scale</a>(float factorX, float factorY)</td><td><a class="el" href="classsf_1_1Transformable.htm">sf::Transformable</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="classsf_1_1Transformable.htm#adecaa6c69b1f27dd5194b067d96bb694">scale</a>(const Vector2f &amp;factor)</td><td><a class="el" href="classsf_1_1Transformable.htm">sf::Transformable</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="classsf_1_1Sprite.htm#a14def44da6437bfea20c4df5e71aba4c">setColor</a>(const Color &amp;color)</td><td><a class="el" href="classsf_1_1Sprite.htm">sf::Sprite</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="classsf_1_1Transformable.htm#a56c67bd80aae8418d13fb96c034d25ec">setOrigin</a>(float x, float y)</td><td><a class="el" href="classsf_1_1Transformable.htm">sf::Transformable</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="classsf_1_1Transformable.htm#aa93a835ffbf3bee2098dfbbc695a7f05">setOrigin</a>(const Vector2f &amp;origin)</td><td><a class="el" href="classsf_1_1Transformable.htm">sf::Transformable</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="classsf_1_1Transformable.htm#a4dbfb1a7c80688b0b4c477d706550208">setPosition</a>(float x, float y)</td><td><a class="el" href="classsf_1_1Transformable.htm">sf::Transformable</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="classsf_1_1Transformable.htm#af1a42209ce2b5d3f07b00f917bcd8015">setPosition</a>(const Vector2f &amp;position)</td><td><a class="el" href="classsf_1_1Transformable.htm">sf::Transformable</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="classsf_1_1Transformable.htm#a32baf2bf1a74699b03bf8c95030a38ed">setRotation</a>(float angle)</td><td><a class="el" href="classsf_1_1Transformable.htm">sf::Transformable</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="classsf_1_1Transformable.htm#aaec50b46b3f41b054763304d1e727471">setScale</a>(float factorX, float factorY)</td><td><a class="el" href="classsf_1_1Transformable.htm">sf::Transformable</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="classsf_1_1Transformable.htm#a4c48a87f1626047e448f9c1a68ff167e">setScale</a>(const Vector2f &amp;factors)</td><td><a class="el" href="classsf_1_1Transformable.htm">sf::Transformable</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="classsf_1_1Sprite.htm#a3729c88d88ac38c19317c18e87242560">setTexture</a>(const Texture &amp;texture, bool resetRect=false)</td><td><a class="el" href="classsf_1_1Sprite.htm">sf::Sprite</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="classsf_1_1Sprite.htm#a3fefec419a4e6a90c0fd54c793d82ec2">setTextureRect</a>(const IntRect &amp;rectangle)</td><td><a class="el" href="classsf_1_1Sprite.htm">sf::Sprite</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="classsf_1_1Sprite.htm#a92559fbca895a96758abf5eabab96984">Sprite</a>()</td><td><a class="el" href="classsf_1_1Sprite.htm">sf::Sprite</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="classsf_1_1Sprite.htm#a2a9fca374d7abf084bb1c143a879ff4a">Sprite</a>(const Texture &amp;texture)</td><td><a class="el" href="classsf_1_1Sprite.htm">sf::Sprite</a></td><td><code> [explicit]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classsf_1_1Sprite.htm#a01cfe1402372d243dbaa2ffa96020206">Sprite</a>(const Texture &amp;texture, const IntRect &amp;rectangle)</td><td><a class="el" href="classsf_1_1Sprite.htm">sf::Sprite</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="classsf_1_1Transformable.htm#ae71710de0fef423121bab1c684954a2e">Transformable</a>()</td><td><a class="el" href="classsf_1_1Transformable.htm">sf::Transformable</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="classsf_1_1Drawable.htm#a906002f2df7beb5edbddf5bbef96f120">~Drawable</a>()</td><td><a class="el" href="classsf_1_1Drawable.htm">sf::Drawable</a></td><td><code> [inline, virtual]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classsf_1_1Transformable.htm#a43253abcb863195a673c2a347a7425cc">~Transformable</a>()</td><td><a class="el" href="classsf_1_1Transformable.htm">sf::Transformable</a></td><td><code> [virtual]</code></td></tr>
</table></div><!-- contents -->

        <p id="footer">
            &nbsp;::&nbsp; Copyright &copy; 2007-2008 Laurent Gomila, all rights reserved &nbsp;::&nbsp;
            Documentation generated by <a href="http://www.doxygen.org/" title="doxygen website">doxygen 1.5.2</a> &nbsp;::&nbsp;
        </p>

    </body>
</html>
