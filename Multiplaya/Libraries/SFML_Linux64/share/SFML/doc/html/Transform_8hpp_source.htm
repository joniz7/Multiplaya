<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<html>
    <head>
        <title>SFML - Simple and Fast Multimedia Library</title>
        <meta http-equiv="Content-Type" content="text/html;charset=UTF-8" />
        <link href="doxygen.css" rel="stylesheet" type="text/css" />
        <link href="tabs.css" rel="stylesheet" type="text/css" />
    </head>
    <body>
        <div id="logo">
            <img src="./logo.jpg" width="770" height="200" title="SFML home" alt="SFML logo" />
        </div>
<!-- Generated by Doxygen 1.7.6.1 -->
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.htm"><span>Main&#160;Page</span></a></li>
      <li><a href="modules.htm"><span>Modules</span></a></li>
      <li><a href="annotated.htm"><span>Classes</span></a></li>
      <li class="current"><a href="files.htm"><span>Files</span></a></li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="files.htm"><span>File&#160;List</span></a></li>
    </ul>
  </div>
</div>
<div class="header">
  <div class="headertitle">
<div class="title">Transform.hpp</div>  </div>
</div><!--header-->
<div class="contents">
<div class="fragment"><pre class="fragment"><a name="l00001"></a>00001 
<a name="l00002"></a>00002 <span class="comment">//</span>
<a name="l00003"></a>00003 <span class="comment">// SFML - Simple and Fast Multimedia Library</span>
<a name="l00004"></a>00004 <span class="comment">// Copyright (C) 2007-2012 Laurent Gomila (laurent.gom@gmail.com)</span>
<a name="l00005"></a>00005 <span class="comment">//</span>
<a name="l00006"></a>00006 <span class="comment">// This software is provided &#39;as-is&#39;, without any express or implied warranty.</span>
<a name="l00007"></a>00007 <span class="comment">// In no event will the authors be held liable for any damages arising from the use of this software.</span>
<a name="l00008"></a>00008 <span class="comment">//</span>
<a name="l00009"></a>00009 <span class="comment">// Permission is granted to anyone to use this software for any purpose,</span>
<a name="l00010"></a>00010 <span class="comment">// including commercial applications, and to alter it and redistribute it freely,</span>
<a name="l00011"></a>00011 <span class="comment">// subject to the following restrictions:</span>
<a name="l00012"></a>00012 <span class="comment">//</span>
<a name="l00013"></a>00013 <span class="comment">// 1. The origin of this software must not be misrepresented;</span>
<a name="l00014"></a>00014 <span class="comment">//    you must not claim that you wrote the original software.</span>
<a name="l00015"></a>00015 <span class="comment">//    If you use this software in a product, an acknowledgment</span>
<a name="l00016"></a>00016 <span class="comment">//    in the product documentation would be appreciated but is not required.</span>
<a name="l00017"></a>00017 <span class="comment">//</span>
<a name="l00018"></a>00018 <span class="comment">// 2. Altered source versions must be plainly marked as such,</span>
<a name="l00019"></a>00019 <span class="comment">//    and must not be misrepresented as being the original software.</span>
<a name="l00020"></a>00020 <span class="comment">//</span>
<a name="l00021"></a>00021 <span class="comment">// 3. This notice may not be removed or altered from any source distribution.</span>
<a name="l00022"></a>00022 <span class="comment">//</span>
<a name="l00024"></a>00024 <span class="comment"></span>
<a name="l00025"></a>00025 <span class="preprocessor">#ifndef SFML_TRANSFORM_HPP</span>
<a name="l00026"></a>00026 <span class="preprocessor"></span><span class="preprocessor">#define SFML_TRANSFORM_HPP</span>
<a name="l00027"></a>00027 <span class="preprocessor"></span>
<a name="l00029"></a>00029 <span class="comment">// Headers</span>
<a name="l00031"></a>00031 <span class="comment"></span><span class="preprocessor">#include &lt;SFML/Graphics/Export.hpp&gt;</span>
<a name="l00032"></a>00032 <span class="preprocessor">#include &lt;SFML/Graphics/Rect.hpp&gt;</span>
<a name="l00033"></a>00033 <span class="preprocessor">#include &lt;SFML/System/Vector2.hpp&gt;</span>
<a name="l00034"></a>00034 
<a name="l00035"></a>00035 
<a name="l00036"></a>00036 <span class="keyword">namespace </span>sf
<a name="l00037"></a>00037 {
<a name="l00042"></a><a class="code" href="classsf_1_1Transform.htm">00042</a> <span class="keyword">class </span>SFML_GRAPHICS_API <a class="code" href="classsf_1_1Transform.htm" title="Define a 3x3 transform matrix.">Transform</a>
<a name="l00043"></a>00043 {
<a name="l00044"></a>00044 <span class="keyword">public</span> :
<a name="l00045"></a>00045 
<a name="l00052"></a>00052     <a class="code" href="classsf_1_1Transform.htm" title="Define a 3x3 transform matrix.">Transform</a>();
<a name="l00053"></a>00053 
<a name="l00068"></a>00068     <a class="code" href="classsf_1_1Transform.htm" title="Define a 3x3 transform matrix.">Transform</a>(<span class="keywordtype">float</span> a00, <span class="keywordtype">float</span> a01, <span class="keywordtype">float</span> a02,
<a name="l00069"></a>00069               <span class="keywordtype">float</span> a10, <span class="keywordtype">float</span> a11, <span class="keywordtype">float</span> a12,
<a name="l00070"></a>00070               <span class="keywordtype">float</span> a20, <span class="keywordtype">float</span> a21, <span class="keywordtype">float</span> a22);
<a name="l00071"></a>00071 
<a name="l00087"></a>00087     <span class="keyword">const</span> <span class="keywordtype">float</span>* getMatrix() <span class="keyword">const</span>;
<a name="l00088"></a>00088 
<a name="l00098"></a>00098     <a class="code" href="classsf_1_1Transform.htm" title="Define a 3x3 transform matrix.">Transform</a> getInverse() <span class="keyword">const</span>;
<a name="l00099"></a>00099 
<a name="l00109"></a>00109     <a class="code" href="classsf_1_1Vector2.htm">Vector2f</a> transformPoint(<span class="keywordtype">float</span> x, <span class="keywordtype">float</span> y) <span class="keyword">const</span>;
<a name="l00110"></a>00110 
<a name="l00119"></a>00119     <a class="code" href="classsf_1_1Vector2.htm">Vector2f</a> transformPoint(<span class="keyword">const</span> <a class="code" href="classsf_1_1Vector2.htm">Vector2f</a>&amp; point) <span class="keyword">const</span>;
<a name="l00120"></a>00120 
<a name="l00135"></a>00135     <a class="code" href="classsf_1_1Rect.htm">FloatRect</a> transformRect(<span class="keyword">const</span> <a class="code" href="classsf_1_1Rect.htm">FloatRect</a>&amp; rectangle) <span class="keyword">const</span>;
<a name="l00136"></a>00136 
<a name="l00149"></a>00149     <a class="code" href="classsf_1_1Transform.htm" title="Define a 3x3 transform matrix.">Transform</a>&amp; combine(<span class="keyword">const</span> <a class="code" href="classsf_1_1Transform.htm" title="Define a 3x3 transform matrix.">Transform</a>&amp; transform);
<a name="l00150"></a>00150 
<a name="l00169"></a>00169     <a class="code" href="classsf_1_1Transform.htm" title="Define a 3x3 transform matrix.">Transform</a>&amp; translate(<span class="keywordtype">float</span> x, <span class="keywordtype">float</span> y);
<a name="l00170"></a>00170 
<a name="l00188"></a>00188     <a class="code" href="classsf_1_1Transform.htm" title="Define a 3x3 transform matrix.">Transform</a>&amp; translate(<span class="keyword">const</span> <a class="code" href="classsf_1_1Vector2.htm">Vector2f</a>&amp; offset);
<a name="l00189"></a>00189 
<a name="l00207"></a>00207     <a class="code" href="classsf_1_1Transform.htm" title="Define a 3x3 transform matrix.">Transform</a>&amp; rotate(<span class="keywordtype">float</span> angle);
<a name="l00208"></a>00208 
<a name="l00233"></a>00233     <a class="code" href="classsf_1_1Transform.htm" title="Define a 3x3 transform matrix.">Transform</a>&amp; rotate(<span class="keywordtype">float</span> angle, <span class="keywordtype">float</span> centerX, <span class="keywordtype">float</span> centerY);
<a name="l00234"></a>00234 
<a name="l00258"></a>00258     <a class="code" href="classsf_1_1Transform.htm" title="Define a 3x3 transform matrix.">Transform</a>&amp; rotate(<span class="keywordtype">float</span> angle, <span class="keyword">const</span> <a class="code" href="classsf_1_1Vector2.htm">Vector2f</a>&amp; center);
<a name="l00259"></a>00259 
<a name="l00278"></a>00278     <a class="code" href="classsf_1_1Transform.htm" title="Define a 3x3 transform matrix.">Transform</a>&amp; scale(<span class="keywordtype">float</span> scaleX, <span class="keywordtype">float</span> scaleY);
<a name="l00279"></a>00279 
<a name="l00305"></a>00305     <a class="code" href="classsf_1_1Transform.htm" title="Define a 3x3 transform matrix.">Transform</a>&amp; scale(<span class="keywordtype">float</span> scaleX, <span class="keywordtype">float</span> scaleY, <span class="keywordtype">float</span> centerX, <span class="keywordtype">float</span> centerY);
<a name="l00306"></a>00306 
<a name="l00324"></a>00324     <a class="code" href="classsf_1_1Transform.htm" title="Define a 3x3 transform matrix.">Transform</a>&amp; scale(<span class="keyword">const</span> <a class="code" href="classsf_1_1Vector2.htm">Vector2f</a>&amp; factors);
<a name="l00325"></a>00325 
<a name="l00349"></a>00349     <a class="code" href="classsf_1_1Transform.htm" title="Define a 3x3 transform matrix.">Transform</a>&amp; scale(<span class="keyword">const</span> <a class="code" href="classsf_1_1Vector2.htm">Vector2f</a>&amp; factors, <span class="keyword">const</span> <a class="code" href="classsf_1_1Vector2.htm">Vector2f</a>&amp; center);
<a name="l00350"></a>00350 
<a name="l00352"></a>00352     <span class="comment">// Static member data</span>
<a name="l00354"></a><a class="code" href="classsf_1_1Transform.htm#aa4eb1eecbcb9979d76e2543b337fdb13">00354</a> <span class="comment"></span>    <span class="keyword">static</span> <span class="keyword">const</span> <a class="code" href="classsf_1_1Transform.htm" title="Define a 3x3 transform matrix.">Transform</a> <a class="code" href="classsf_1_1Transform.htm#aa4eb1eecbcb9979d76e2543b337fdb13" title="The identity transform (does nothing)">Identity</a>; 
<a name="l00355"></a>00355 
<a name="l00356"></a>00356 <span class="keyword">private</span>:
<a name="l00357"></a>00357 
<a name="l00359"></a>00359     <span class="comment">// Member data</span>
<a name="l00361"></a>00361 <span class="comment"></span>    <span class="keywordtype">float</span> m_matrix[16]; 
<a name="l00362"></a>00362 };
<a name="l00363"></a>00363 
<a name="l00376"></a>00376 SFML_GRAPHICS_API <a class="code" href="classsf_1_1Transform.htm" title="Define a 3x3 transform matrix.">Transform</a> operator *(<span class="keyword">const</span> <a class="code" href="classsf_1_1Transform.htm" title="Define a 3x3 transform matrix.">Transform</a>&amp; left, <span class="keyword">const</span> <a class="code" href="classsf_1_1Transform.htm" title="Define a 3x3 transform matrix.">Transform</a>&amp; right);
<a name="l00377"></a>00377 
<a name="l00390"></a>00390 SFML_GRAPHICS_API <a class="code" href="classsf_1_1Transform.htm" title="Define a 3x3 transform matrix.">Transform</a>&amp; operator *=(<a class="code" href="classsf_1_1Transform.htm" title="Define a 3x3 transform matrix.">Transform</a>&amp; left, <span class="keyword">const</span> <a class="code" href="classsf_1_1Transform.htm" title="Define a 3x3 transform matrix.">Transform</a>&amp; right);
<a name="l00391"></a>00391 
<a name="l00404"></a>00404 SFML_GRAPHICS_API <a class="code" href="classsf_1_1Vector2.htm">Vector2f</a> operator *(<span class="keyword">const</span> <a class="code" href="classsf_1_1Transform.htm" title="Define a 3x3 transform matrix.">Transform</a>&amp; left, <span class="keyword">const</span> <a class="code" href="classsf_1_1Vector2.htm">Vector2f</a>&amp; right);
<a name="l00405"></a>00405 
<a name="l00406"></a>00406 } <span class="comment">// namespace sf</span>
<a name="l00407"></a>00407 
<a name="l00408"></a>00408 
<a name="l00409"></a>00409 <span class="preprocessor">#endif // SFML_TRANSFORM_HPP</span>
<a name="l00410"></a>00410 <span class="preprocessor"></span>
<a name="l00411"></a>00411 
</pre></div></div><!-- contents -->

        <p id="footer">
            &nbsp;::&nbsp; Copyright &copy; 2007-2008 Laurent Gomila, all rights reserved &nbsp;::&nbsp;
            Documentation generated by <a href="http://www.doxygen.org/" title="doxygen website">doxygen 1.5.2</a> &nbsp;::&nbsp;
        </p>

    </body>
</html>
